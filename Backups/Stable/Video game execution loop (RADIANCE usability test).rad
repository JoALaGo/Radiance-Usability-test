{"schema_Array":[{"element_name":"BBCP template","element_content":{"Profile_configuration":{"consumption_guide":"","software_category":"","software_type":"","hardware_platform":"","Computation_centric":{"task_distribution":"","computational_criticality":"","computation_complexity":"","distribution_strategy":""},"Data_centric":{"data_flow_behavior":"","data_flow_direction":"","data_handling":""},"Conduct_centric":{"access_frequency":"","consumption_rate":"","depth":"","dependence":""}},"Usage":{"profile_evaluation_rate":"","run_base_probability":"","stop_base_probability":"","Run_constraints":{"minimum_run_time":"","maximum_run_time":"","quota":"","cooldown":"","countdown":""}},"Expectations":{"Cycles":[{"Days":"","Scale":"","Timed_expectations":[{"time_range":"","evaluation_rate_override":"","run_probability_override":"","stop_probability_override":"","Run_constraints":{"minimum_run_time":"","maximum_run_time":"","quota":"","cooldown":"","countdown":""},"Elasticity":{"elasticity":"","minimum_run_probability":"","maximum_run_probability":"","minimum_stop_probability":"","maximum_stop_probability":"","positive_run_probability_modifier":"","negative_run_probability_modifier":"","positive_stop_probability_modifier":"","negative_stop_probability_modifier":""}}]}],"Events":[{"initial_day":"","end_day":"","Timed_expectations":[{"time_range":"","evaluation_rate_override":"","run_probability_override":"","stop_probability_override":"","Elasticity":{"elasticity":"","minimum_run_probability":"","maximum_run_probability":"","minimum_stop_probability":"","maximum_stop_probability":"","positive_run_probability_modifier":"","negative_run_probability_modifier":"","positive_stop_probability_modifier":"","negative_stop_probability_modifier":""},"Run_constraints":{"minimum_run_time":"","maximum_run_time":"","quota":"","cooldown":"","countdown":""}}]}]},"Operations":[{"operation_ID":"","operation_description":"","operation_data_handling":"","operation_task_distribution":"","operation_depth":"","instructions":"","resource_usage":{"CPU_usage":"","RAM_usage":"","storage_usage":"","network_usage":""},"sensor_usage":{"Camera":"","Screen_brightness":"","GPS":"","Bluetooth":"","WIFI_usage":""},"Operation_run_constraints":{"minimum_run_time":"","maximum_run_time":"","quota":"","cooldown":"","countdown":""}}],"Dependencies":{"Operational":[{"source_operation_id":"","target_operation_ID":"","operational_dependency_type":""}],"Triggers":[{"operation_id":"","trigger_value":"","trigger_Type":""}],"Results":[{"source_operation":"","target_operation":"","parameter":""}]},"Parameters":[{"parameter_ID":"","parameter_description":"","direction":"","size":"","origin":""}]},"is_guide":false,"element_id":1705313496854,"element_type":"schema"},{"element_name":"Taxonomical Hardware Consumption Guide Template","element_content":{"Categories":[{"name":"","description":"","general-traits":{"data_dominant_software":"","computation_dominant_software":"","systems_software":""},"sub-categories":[{"name":"","consumption":[{"platform_name":"","notes_on_the_platform":"","CPU":{"low":"","medium":"","high":"","notes":""},"RAM":{"low":"","medium":"","high":"","notes":""},"Storage":{"low":"","medium":"","high":"","notes":""},"Graphics":{"low":"","medium":"","high":"","notes":""},"Network":{"low":"","medium":"","high":"","notes":""},"Camera":"","Screen_brightness":"","GPS":"","Bluetooth":""}]}],"consumption":[{"platform_name":"","notes_on_the_platform":"","CPU":{"low":"","medium":"","high":"","notes":""},"RAM":{"low":"","medium":"","high":"","notes":""},"Storage":{"low":"","medium":"","high":"","notes":""},"Graphics":{"low":"","medium":"","high":"","notes":""},"Network":{"low":"","medium":"","high":"","notes":""},"Camera":"","Screen_brightness":"","GPS":"","Bluetooth":""}]}]},"is_guide":true,"element_id":1705313608657,"element_type":"schema"}],"profile_Array":[{"element_content":{"Categories":[{"name":"","description":"","general-traits":{"data_dominant_software":"","computation_dominant_software":"","systems_software":""},"sub-categories":[{"name":"","consumption":[{"platform_name":"","notes_on_the_platform":"","CPU":{"low":"","medium":"","high":"","notes":""},"RAM":{"low":"","medium":"","high":"","notes":""},"Storage":{"low":"","medium":"","high":"","notes":""},"Graphics":{"low":"","medium":"","high":"","notes":""},"Network":{"low":"","medium":"","high":"","notes":""},"Camera":"","Screen_brightness":"","GPS":"","Bluetooth":""}]}],"consumption":[{"platform_name":"","notes_on_the_platform":"","CPU":{"low":"","medium":"","high":"","notes":""},"RAM":{"low":"","medium":"","high":"","notes":""},"Storage":{"low":"","medium":"","high":"","notes":""},"Graphics":{"low":"","medium":"","high":"","notes":""},"Network":{"low":"","medium":"","high":"","notes":""},"Camera":"","Screen_brightness":"","GPS":"","Bluetooth":""}]}]},"element_name":"Control taxonomical consumption","element_rated":false,"element_schema":1705313608657,"element_id":1673607962764,"element_type":"profile","profile_cache":"[[\"Categories\",{\"name\":\"\",\"description\":\"\"},\"array\",\"root\",[{\"inner_id\":1673607995415,\"Name\":\"Consumer-Oriented Software\",\"parent_id\":0,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"name\":\"Consumer-Oriented Software\",\"description\":\"These are mostly entertainment apps.\"}},{\"name\":\"general_traits\",\"variables\":{\"data_dominant_software\":\"true\",\"computation_dominant_software\":\"false\",\"systems_software\":\"false\"}}]}]],[\"general_traits\",{\"data_dominant_software\":\"\",\"computation_dominant_software\":\"\",\"systems_software\":\"\"},\"object\",0,[]],[\"sub_categories\",{\"name\":\"\"},\"array\",0,[{\"inner_id\":1673619329142,\"Name\":\"Interactive Streaming\",\"parent_id\":2,\"parent_instance_id\":1673607995415,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"name\":\"Interactive Streaming\"}}]},{\"inner_id\":1673620226471,\"Name\":\"Voice/text/chat\",\"parent_id\":2,\"parent_instance_id\":1673607995415,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"name\":\"Voice/text/chat\"}}]}]],[\"consumption\",{\"platform_name\":\"\",\"notes_on_the_platform\":\"\",\"Camera\":\"\",\"Screen_brightness\":\"\",\"GPS\":\"\",\"Bluetooth\":\"\"},\"array\",0,[{\"inner_id\":1673607997968,\"Name\":\"Desktop\",\"parent_id\":3,\"parent_instance_id\":1673607995415,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"platform_name\":\"Desktop\",\"notes_on_the_platform\":\"It seems like most of the developers gave up on providing hardware requirements long ago since the availability of resources is great.\",\"Camera\":\"false\",\"Screen_brightness\":\"custom\",\"GPS\":\"false\",\"Bluetooth\":\"false\"}},{\"name\":\"CPU\",\"variables\":{\"low\":\"1.8\",\"medium\":\"2\",\"high\":\"3\",\"notes\":\"The values are in GHz. This is based on the taxonomical software study\"}},{\"name\":\"RAM\",\"variables\":{\"low\":\"0.8\",\"medium\":\"2\",\"high\":\"4\",\"notes\":\"The values are in GB. Nowadays recently released desktop and laptops have at least 8GB of RAM, 4GB still remains a high consumption for an application.\"}},{\"name\":\"Storage\",\"variables\":{\"low\":\"0.2\",\"medium\":\"0.4\",\"high\":\"1\",\"notes\":\"The values are in GB. Most of the apps available nowadays are used in the browser and they are hosted remotely.\"}},{\"name\":\"Graphics\",\"variables\":{\"low\":\"\",\"medium\":\"\",\"high\":\"\",\"notes\":\"This is a tough one, I still do not know how to treat this.\"}},{\"name\":\"Network\",\"variables\":{\"low\":\"1.8\",\"medium\":\"10\",\"high\":\"25\",\"notes\":\"The values are in Mbps.\"}}]},{\"inner_id\":1673619109315,\"Name\":\"Smartphone\",\"parent_id\":3,\"parent_instance_id\":1673607995415,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"platform_name\":\"Smartphone\",\"notes_on_the_platform\":\"The quantities are similar to the ones used by the desktop, but scaled down with the difference in hardware capacity.\",\"Camera\":\"false\",\"Screen_brightness\":\"auto\",\"GPS\":\"false\",\"Bluetooth\":\"true\"}},{\"name\":\"CPU\",\"variables\":{\"low\":\"1\",\"medium\":\"1.8\",\"high\":\"2\",\"notes\":\"\"}},{\"name\":\"RAM\",\"variables\":{\"low\":\"0.5\",\"medium\":\"0.8\",\"high\":\"1\",\"notes\":\"\"}},{\"name\":\"Storage\",\"variables\":{\"low\":\"0.2\",\"medium\":\"0.4\",\"high\":\"1\",\"notes\":\"\"}},{\"name\":\"Graphics\",\"variables\":{\"low\":\"\",\"medium\":\"\",\"high\":\"\",\"notes\":\"\"}},{\"name\":\"Network\",\"variables\":{\"low\":\"5\",\"medium\":\"10\",\"high\":\"15\",\"notes\":\"\"}}]}]],[\"CPU\",{\"low\":\"\",\"medium\":\"\",\"high\":\"\",\"notes\":\"\"},\"object\",3,[]],[\"RAM\",{\"low\":\"\",\"medium\":\"\",\"high\":\"\",\"notes\":\"\"},\"object\",3,[]],[\"Storage\",{\"low\":\"\",\"medium\":\"\",\"high\":\"\",\"notes\":\"\"},\"object\",3,[]],[\"Graphics\",{\"low\":\"\",\"medium\":\"\",\"high\":\"\",\"notes\":\"\"},\"object\",3,[]],[\"Network\",{\"low\":\"\",\"medium\":\"\",\"high\":\"\",\"notes\":\"\"},\"object\",3,[]],[\"consumption\",{\"platform_name\":\"\",\"notes_on_the_platform\":\"\",\"Camera\":\"\",\"Screen_brightness\":\"\",\"GPS\":\"\",\"Bluetooth\":\"\"},\"array\",2,[{\"inner_id\":1673619352782,\"Name\":\"Desktop\",\"parent_id\":9,\"parent_instance_id\":1673619329142,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"platform_name\":\"Desktop\",\"notes_on_the_platform\":\"none\",\"Camera\":\"false\",\"Screen_brightness\":\"custom\",\"GPS\":\"false\",\"Bluetooth\":\"false\"}},{\"name\":\"CPU\",\"variables\":{\"low\":\"2.0\",\"medium\":\"2.5\",\"high\":\"3.0\",\"notes\":\"Even though the base frequency is 2.0, maybe other streaming applications consume more.\"}},{\"name\":\"RAM\",\"variables\":{\"low\":\"4\",\"medium\":\"4.5\",\"high\":\"5\",\"notes\":\"The baseline is 4GB, taken from Geforce Now system requirements\"}},{\"name\":\"Storage\",\"variables\":{\"low\":\"0.2\",\"medium\":\"0.3\",\"high\":\"0.4\",\"notes\":\"The consumpiton is in GB, The baseline is 200MB\"}},{\"name\":\"Graphics\",\"variables\":{\"low\":\"\",\"medium\":\"\",\"high\":\"\",\"notes\":\"\"}},{\"name\":\"Network\",\"variables\":{\"low\":\"15\",\"medium\":\"25\",\"high\":\"50\",\"notes\":\"The consumption of the network for this type of applications relies greatly on the quality of the image.\"}}]},{\"inner_id\":1673620275460,\"Name\":\"Desktop\",\"parent_id\":9,\"parent_instance_id\":1673620226471,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"platform_name\":\"Voice/text/chat\",\"notes_on_the_platform\":\"The video calls are not included in this category, as they constitute a whole new level of consumption.\",\"Camera\":\"false\",\"Screen_brightness\":\"custom\",\"GPS\":\"false\",\"Bluetooth\":\"false\"}},{\"name\":\"CPU\",\"variables\":{\"low\":\"0.5\",\"medium\":\"1\",\"high\":\"2\",\"notes\":\"There appear to be no specific system requirements for some of the platforms, such as discord. The developers are begining to just specify the target OS, disregarding the hardware system requirements.\"}},{\"name\":\"RAM\",\"variables\":{\"low\":\"0.8\",\"medium\":\"0.2\",\"high\":\"0.4\",\"notes\":\"The ram varies a lot; for instance, the RAM usage of discord is presumably 80 MB, while whatsapp advertises 400MB\"}},{\"name\":\"Storage\",\"variables\":{\"low\":\"0.4\",\"medium\":\"0.1\",\"high\":\"0.15\",\"notes\":\"The storage usage varies a lot depending on the application type. For instance, discord requires 159 MB, while whatsapp requires 40.\"}},{\"name\":\"Graphics\",\"variables\":{\"low\":\"\",\"medium\":\"\",\"high\":\"\",\"notes\":\"\"}},{\"name\":\"Network\",\"variables\":{\"low\":\"0.5\",\"medium\":\"1\",\"high\":\"5\",\"notes\":\"The values here are speculative, there is no foundation behind. They need to be updated. There was a study performed where the authors found that discord sustained a consumption of 222 Kbps (page  21 of https://www.nctatechnicalpapers.com/Paper/2018/2018-supporting-the-changing-requirements-for-online-gaming/download)\"}}]}]],[\"CPU\",{\"low\":\"\",\"medium\":\"\",\"high\":\"\",\"notes\":\"\"},\"object\",9,[]],[\"RAM\",{\"low\":\"\",\"medium\":\"\",\"high\":\"\",\"notes\":\"\"},\"object\",9,[]],[\"Storage\",{\"low\":\"\",\"medium\":\"\",\"high\":\"\",\"notes\":\"\"},\"object\",9,[]],[\"Graphics\",{\"low\":\"\",\"medium\":\"\",\"high\":\"\",\"notes\":\"\"},\"object\",9,[]],[\"Network\",{\"low\":\"\",\"medium\":\"\",\"high\":\"\",\"notes\":\"\"},\"object\",9,[]]]","consumption_guide":"1673607962764"},{"element_content":{"Profile_configuration":{"consumption_guide":"","software_category":"","software_type":"","hardware_platform":"","Computation_centric":{"task_distribution":"","computational_criticality":"","computation_complexity":"","distribution_strategy":""},"Data_centric":{"data_flow_behavior":"","data_flow_direction":"","data_handling":""},"Conduct_centric":{"access_frequency":"","consumption_rate":"","depth":"","dependence":""}},"Usage":{"profile_evaluation_rate":"","run_base_probability":"","stop_base_probability":"","Run_constraints":{"minimum_run_time":"","maximum_run_time":"","quota":"","cooldown":"","countdown":""}},"Expectations":{"Cycles":[{"Days":"","Scale":"","Timed_expectations":[{"time_range":"","evaluation_rate_override":"","run_probability_override":"","stop_probability_override":"","Run_constraints":{"minimum_run_time":"","maximum_run_time":"","quota":"","cooldown":"","countdown":""},"Elasticity":{"elasticity":"","minimum_run_probability":"","maximum_run_probability":"","minimum_stop_probability":"","maximum_stop_probability":"","positive_run_probability_modifier":"","negative_run_probability_modifier":"","positive_stop_probability_modifier":"","negative_stop_probability_modifier":""}}]}],"Events":[{"initial_day":"","end_day":"","Timed_expectations":[{"time_range":"","evaluation_rate_override":"","run_probability_override":"","stop_probability_override":"","Elasticity":{"elasticity":"","minimum_run_probability":"","maximum_run_probability":"","minimum_stop_probability":"","maximum_stop_probability":"","positive_run_probability_modifier":"","negative_run_probability_modifier":"","positive_stop_probability_modifier":"","negative_stop_probability_modifier":""},"Run_constraints":{"minimum_run_time":"","maximum_run_time":"","quota":"","cooldown":"","countdown":""}}]}]},"Operations":[{"operation_ID":"","operation_description":"","operation_data_handling":"","operation_task_distribution":"","operation_depth":"","instructions":"","resource_usage":{"CPU_usage":"","RAM_usage":"","storage_usage":"","network_usage":""},"sensor_usage":{"Camera":"","Screen_brightness":"","GPS":"","Bluetooth":"","WIFI_usage":""},"Operation_run_constraints":{"minimum_run_time":"","maximum_run_time":"","quota":"","cooldown":"","countdown":""}}],"Dependencies":{"Operational":[{"source_operation_id":"","target_operation_ID":"","operational_dependency_type":""}],"Triggers":[{"operation_id":"","trigger_value":"","trigger_Type":""}],"Results":[{"source_operation":"","target_operation":"","parameter":""}]},"Parameters":[{"parameter_ID":"","parameter_description":"","direction":"","size":"","origin":""}]},"element_name":"BBCP Empty Template","element_rated":false,"element_schema":1705313496854,"element_id":1707206804617,"element_type":"profile","profile_cache":"[[\"Profile_configuration\",{\"consumption_guide\":\"\",\"software_category\":\"\",\"software_type\":\"\",\"hardware_platform\":\"\"},\"object\",\"root\",[]],[\"Computation_centric\",{\"task_distribution\":\"\",\"computational_criticality\":\"\",\"computation_complexity\":\"\",\"distribution_strategy\":\"\"},\"object\",0,[]],[\"Data_centric\",{\"data_flow_behavior\":\"\",\"data_flow_direction\":\"\",\"data_handling\":\"\"},\"object\",0,[]],[\"Conduct_centric\",{\"access_frequency\":\"\",\"consumption_rate\":\"\",\"depth\":\"\",\"dependence\":\"\"},\"object\",0,[]],[\"Usage\",{\"profile_evaluation_rate\":\"\",\"run_base_probability\":\"\",\"stop_base_probability\":\"\"},\"object\",\"root\",[]],[\"Run_constraints\",{\"minimum_run_time\":\"\",\"maximum_run_time\":\"\",\"quota\":\"\",\"cooldown\":\"\",\"countdown\":\"\"},\"object\",4,[]],[\"Expectations\",{},\"object\",\"root\",[]],[\"Cycles\",{\"Days\":\"\",\"Scale\":\"\"},\"array\",6,[]],[\"Timed_expectations\",{\"time_range\":\"\",\"evaluation_rate_override\":\"\",\"run_probability_override\":\"\",\"stop_probability_override\":\"\"},\"array\",7,[]],[\"Run_constraints\",{\"minimum_run_time\":\"\",\"maximum_run_time\":\"\",\"quota\":\"\",\"cooldown\":\"\",\"countdown\":\"\"},\"object\",8,[]],[\"Elasticity\",{\"elasticity\":\"\",\"minimum_run_probability\":\"\",\"maximum_run_probability\":\"\",\"minimum_stop_probability\":\"\",\"maximum_stop_probability\":\"\",\"positive_run_probability_modifier\":\"\",\"negative_run_probability_modifier\":\"\",\"positive_stop_probability_modifier\":\"\",\"negative_stop_probability_modifier\":\"\"},\"object\",8,[]],[\"Events\",{\"initial_day\":\"\",\"end_day\":\"\"},\"array\",6,[]],[\"Timed_expectations\",{\"time_range\":\"\",\"evaluation_rate_override\":\"\",\"run_probability_override\":\"\",\"stop_probability_override\":\"\"},\"array\",11,[]],[\"Elasticity\",{\"elasticity\":\"\",\"minimum_run_probability\":\"\",\"maximum_run_probability\":\"\",\"minimum_stop_probability\":\"\",\"maximum_stop_probability\":\"\",\"positive_run_probability_modifier\":\"\",\"negative_run_probability_modifier\":\"\",\"positive_stop_probability_modifier\":\"\",\"negative_stop_probability_modifier\":\"\"},\"object\",12,[]],[\"Run_constraints\",{\"minimum_run_time\":\"\",\"maximum_run_time\":\"\",\"quota\":\"\",\"cooldown\":\"\",\"countdown\":\"\"},\"object\",12,[]],[\"Operations\",{\"operation_ID\":\"\",\"operation_description\":\"\",\"operation_data_handling\":\"\",\"operation_task_distribution\":\"\",\"operation_depth\":\"\",\"instructions\":\"\"},\"array\",\"root\",[]],[\"resource_usage\",{\"CPU_usage\":\"\",\"RAM_usage\":\"\",\"storage_usage\":\"\",\"network_usage\":\"\"},\"object\",15,[]],[\"sensor_usage\",{\"Camera\":\"\",\"Screen_brightness\":\"\",\"GPS\":\"\",\"Bluetooth\":\"\",\"WIFI_usage\":\"\"},\"object\",15,[]],[\"Operation_run_constraints\",{\"minimum_run_time\":\"\",\"maximum_run_time\":\"\",\"quota\":\"\",\"cooldown\":\"\",\"countdown\":\"\"},\"object\",15,[]],[\"Parameters\",{\"parameter_ID\":\"\",\"parameter_description\":\"\",\"direction\":\"\",\"size\":\"\",\"origin\":\"\"},\"array\",\"root\",[]],[\"Dependencies\",{},\"object\",\"root\",[]],[\"Operational\",{\"source_operation_id\":\"\",\"target_operation_ID\":\"\",\"operational_dependency_type\":\"\"},\"array\",20,[]],[\"Triggers\",{\"operation_id\":\"\",\"trigger_value\":\"\",\"trigger_Type\":\"\"},\"array\",20,[]],[\"Results\",{\"source_operation\":\"\",\"target_operation\":\"\",\"parameter\":\"\"},\"array\",20,[]]]","consumption_guide":1673607962764,"is_guide":false},{"element_content":{"Profile_configuration":{"consumption_guide":"","software_category":"","software_type":"","hardware_platform":"","Computation_centric":{"task_distribution":"","computational_criticality":"","computation_complexity":"","distribution_strategy":""},"Data_centric":{"data_flow_behavior":"","data_flow_direction":"","data_handling":""},"Conduct_centric":{"access_frequency":"","consumption_rate":"","depth":"","dependence":""}},"Usage":{"profile_evaluation_rate":"","run_base_probability":"","stop_base_probability":"","Run_constraints":{"minimum_run_time":"","maximum_run_time":"","quota":"","cooldown":"","countdown":""}},"Expectations":{"Cycles":[{"Days":"","Scale":"","Timed_expectations":[{"time_range":"","evaluation_rate_override":"","run_probability_override":"","stop_probability_override":"","Run_constraints":{"minimum_run_time":"","maximum_run_time":"","quota":"","cooldown":"","countdown":""},"Elasticity":{"elasticity":"","minimum_run_probability":"","maximum_run_probability":"","minimum_stop_probability":"","maximum_stop_probability":"","positive_run_probability_modifier":"","negative_run_probability_modifier":"","positive_stop_probability_modifier":"","negative_stop_probability_modifier":""}}]}],"Events":[{"initial_day":"","end_day":"","Timed_expectations":[{"time_range":"","evaluation_rate_override":"","run_probability_override":"","stop_probability_override":"","Elasticity":{"elasticity":"","minimum_run_probability":"","maximum_run_probability":"","minimum_stop_probability":"","maximum_stop_probability":"","positive_run_probability_modifier":"","negative_run_probability_modifier":"","positive_stop_probability_modifier":"","negative_stop_probability_modifier":""},"Run_constraints":{"minimum_run_time":"","maximum_run_time":"","quota":"","cooldown":"","countdown":""}}]}]},"Operations":[{"operation_ID":"","operation_description":"","operation_data_handling":"","operation_task_distribution":"","operation_depth":"","instructions":"","resource_usage":{"CPU_usage":"","RAM_usage":"","storage_usage":"","network_usage":""},"sensor_usage":{"Camera":"","Screen_brightness":"","GPS":"","Bluetooth":"","WIFI_usage":""},"Operation_run_constraints":{"minimum_run_time":"","maximum_run_time":"","quota":"","cooldown":"","countdown":""}}],"Dependencies":{"Operational":[{"source_operation_id":"","target_operation_ID":"","operational_dependency_type":""}],"Triggers":[{"operation_id":"","trigger_value":"","trigger_Type":""}],"Results":[{"source_operation":"","target_operation":"","parameter":""}]},"Parameters":[{"parameter_ID":"","parameter_description":"","direction":"","size":"","origin":""}]},"element_name":"Video game execution loop","element_rated":false,"element_schema":1705313496854,"element_id":887770500712,"element_type":"profile","profile_cache":"[[\"Profile_configuration\",{\"consumption_guide\":\"\",\"software_category\":\"1673607995415\",\"software_type\":\"1673619329142\",\"hardware_platform\":\"1673619352782\"},\"object\",\"root\",[]],[\"Computation_centric\",{\"task_distribution\":\"centralized\",\"computational_criticality\":\"low\",\"computation_complexity\":\"high\",\"distribution_strategy\":\"\"},\"object\",0,[]],[\"Data_centric\",{\"data_flow_behavior\":\"regular\",\"data_flow_direction\":\"unidirectional\",\"data_handling\":\"destroy\"},\"object\",0,[]],[\"Conduct_centric\",{\"access_frequency\":\"regular\",\"consumption_rate\":\"definite\",\"depth\":\"foreground\",\"dependence\":\"dependee\"},\"object\",0,[]],[\"Usage\",{\"profile_evaluation_rate\":\"\",\"run_base_probability\":\"\",\"stop_base_probability\":\"\"},\"object\",\"root\",[]],[\"Run_constraints\",{\"minimum_run_time\":\"\",\"maximum_run_time\":\"\",\"quota\":\"\",\"cooldown\":\"\",\"countdown\":\"\"},\"object\",4,[]],[\"Expectations\",{},\"object\",\"root\",[]],[\"Cycles\",{\"Days\":\"\",\"Scale\":\"\"},\"array\",6,[]],[\"Timed_expectations\",{\"time_range\":\"\",\"evaluation_rate_override\":\"\",\"run_probability_override\":\"\",\"stop_probability_override\":\"\"},\"array\",7,[]],[\"Run_constraints\",{\"minimum_run_time\":\"\",\"maximum_run_time\":\"\",\"quota\":\"\",\"cooldown\":\"\",\"countdown\":\"\"},\"object\",8,[]],[\"Elasticity\",{\"elasticity\":\"\",\"minimum_run_probability\":\"\",\"maximum_run_probability\":\"\",\"minimum_stop_probability\":\"\",\"maximum_stop_probability\":\"\",\"positive_run_probability_modifier\":\"\",\"negative_run_probability_modifier\":\"\",\"positive_stop_probability_modifier\":\"\",\"negative_stop_probability_modifier\":\"\"},\"object\",8,[]],[\"Events\",{\"initial_day\":\"\",\"end_day\":\"\"},\"array\",6,[]],[\"Timed_expectations\",{\"time_range\":\"\",\"evaluation_rate_override\":\"\",\"run_probability_override\":\"\",\"stop_probability_override\":\"\"},\"array\",11,[]],[\"Elasticity\",{\"elasticity\":\"\",\"minimum_run_probability\":\"\",\"maximum_run_probability\":\"\",\"minimum_stop_probability\":\"\",\"maximum_stop_probability\":\"\",\"positive_run_probability_modifier\":\"\",\"negative_run_probability_modifier\":\"\",\"positive_stop_probability_modifier\":\"\",\"negative_stop_probability_modifier\":\"\"},\"object\",12,[]],[\"Run_constraints\",{\"minimum_run_time\":\"\",\"maximum_run_time\":\"\",\"quota\":\"\",\"cooldown\":\"\",\"countdown\":\"\"},\"object\",12,[]],[\"Operations\",{\"operation_ID\":\"\",\"operation_description\":\"\",\"operation_data_handling\":\"\",\"operation_task_distribution\":\"\",\"operation_depth\":\"\",\"instructions\":\"\"},\"array\",\"root\",[{\"inner_id\":1707235762173,\"Name\":\"Load game\",\"parent_id\":15,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"operation_ID\":1707235762173,\"operation_description\":\"A user runs a game.\",\"operation_data_handling\":\"destroy\",\"operation_task_distribution\":\"centralized\",\"operation_depth\":\"background\",\"instructions\":\"\"}},{\"name\":\"resource_usage\",\"variables\":{\"CPU_usage\":\"low\",\"RAM_usage\":\"low\",\"storage_usage\":\"high\",\"network_usage\":\"low\"}},{\"name\":\"sensor_usage\",\"variables\":{\"Camera\":\"off\",\"Screen_brightness\":\"medium\",\"GPS\":\"off\",\"Bluetooth\":\"off\",\"WIFI_usage\":\"off\"}},{\"name\":\"Operation_run_constraints\",\"variables\":{\"minimum_run_time\":\"\",\"maximum_run_time\":\"\",\"quota\":\"\",\"cooldown\":\"\",\"countdown\":\"\"}}],\"last_HCS\":{\"Cc\":0.6666666666666666,\"Ca\":1.6,\"Rc\":1.3333333333333333,\"Ra\":16,\"Nc\":5,\"Na\":2400,\"Sc\":\"0.4\",\"Sa\":256,\"Camera\":\"off\",\"camera_weight\":0.1,\"Bluetooth\":\"off\",\"Bluetooth_weight\":0.35,\"WIFI_usage\":\"off\",\"WIFI_usage_weight\":0.35,\"GPS\":\"off\",\"GPS_weight\":0.2,\"Screen_brightness\":\"medium\",\"Screen_brightness_weight\":\"\",\"cpuWeight\":0.3,\"ramWeight\":0.1,\"netWeight\":0.5,\"storWeight\":0.1,\"HcS\":13.453125,\"SCS\":6,\"BCS\":3.6,\"Ocs\":23.053125,\"operation_data_handling\":\"destroy\",\"operation_depth\":\"background\",\"operation_task_distribution\":\"centralized\",\"operation_id\":\"1707235762173\"}},{\"inner_id\":1707235846606,\"Name\":\"Read peripheral input\",\"parent_id\":15,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"operation_ID\":1707235846606,\"operation_description\":\"The game reads the mouse and keyboard states.\",\"operation_data_handling\":\"destroy\",\"operation_task_distribution\":\"centralized\",\"operation_depth\":\"foreground\",\"instructions\":\"\"}},{\"name\":\"resource_usage\",\"variables\":{\"CPU_usage\":\"low\",\"RAM_usage\":\"low\",\"storage_usage\":\"low\",\"network_usage\":\"low\"}},{\"name\":\"sensor_usage\",\"variables\":{\"Camera\":\"off\",\"Screen_brightness\":\"off\",\"GPS\":\"off\",\"Bluetooth\":\"off\",\"WIFI_usage\":\"off\"}},{\"name\":\"Operation_run_constraints\",\"variables\":{\"minimum_run_time\":\"\",\"maximum_run_time\":\"\",\"quota\":\"\",\"cooldown\":\"\",\"countdown\":\"\"}}],\"last_HCS\":{\"Cc\":0.6666666666666666,\"Ca\":1.6,\"Rc\":1.3333333333333333,\"Ra\":16,\"Nc\":5,\"Na\":2400,\"Sc\":0.06666666666666667,\"Sa\":256,\"Camera\":\"off\",\"camera_weight\":0.1,\"Bluetooth\":\"off\",\"Bluetooth_weight\":0.35,\"WIFI_usage\":\"off\",\"WIFI_usage_weight\":0.35,\"GPS\":\"off\",\"GPS_weight\":0.2,\"Screen_brightness\":\"off\",\"Screen_brightness_weight\":\"\",\"cpuWeight\":0.3,\"ramWeight\":0.1,\"netWeight\":0.5,\"storWeight\":0.1,\"HcS\":13.440104166666666,\"SCS\":0,\"BCS\":4.1,\"Ocs\":17.540104166666666,\"operation_data_handling\":\"destroy\",\"operation_depth\":\"foreground\",\"operation_task_distribution\":\"centralized\",\"operation_id\":\"1707235846606\"}},{\"inner_id\":1707235999190,\"Name\":\"Process video frames\",\"parent_id\":15,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"operation_ID\":1707235999190,\"operation_description\":\"The game renders the next frames based on the input.\",\"operation_data_handling\":\"destroy\",\"operation_task_distribution\":\"centralized\",\"operation_depth\":\"foreground\",\"instructions\":\"\"}},{\"name\":\"resource_usage\",\"variables\":{\"CPU_usage\":\"high\",\"RAM_usage\":\"high\",\"storage_usage\":\"low\",\"network_usage\":\"\"}},{\"name\":\"sensor_usage\",\"variables\":{\"Camera\":\"off\",\"Screen_brightness\":\"off\",\"GPS\":\"off\",\"Bluetooth\":\"off\",\"WIFI_usage\":\"off\"}},{\"name\":\"Operation_run_constraints\",\"variables\":{\"minimum_run_time\":\"\",\"maximum_run_time\":\"\",\"quota\":\"\",\"cooldown\":\"\",\"countdown\":\"\"}}],\"last_HCS\":{\"Cc\":\"3.0\",\"Ca\":1.6,\"Rc\":\"5\",\"Ra\":16,\"Nc\":0,\"Na\":2400,\"Sc\":0.06666666666666667,\"Sa\":256,\"Camera\":\"off\",\"camera_weight\":0.1,\"Bluetooth\":\"off\",\"Bluetooth_weight\":0.35,\"WIFI_usage\":\"off\",\"WIFI_usage_weight\":0.35,\"GPS\":\"off\",\"GPS_weight\":0.2,\"Screen_brightness\":\"off\",\"Screen_brightness_weight\":\"\",\"cpuWeight\":0.3,\"ramWeight\":0.1,\"netWeight\":0.5,\"storWeight\":0.1,\"HcS\":59.377604166666664,\"SCS\":0,\"BCS\":4.1,\"Ocs\":63.477604166666666,\"operation_data_handling\":\"destroy\",\"operation_depth\":\"foreground\",\"operation_task_distribution\":\"centralized\",\"operation_id\":\"1707235999190\"}},{\"inner_id\":1707236036358,\"Name\":\"Process audio\",\"parent_id\":15,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"operation_ID\":1707236036358,\"operation_description\":\"Play the audio for the next frames.\",\"operation_data_handling\":\"destroy\",\"operation_task_distribution\":\"centralized\",\"operation_depth\":\"foreground\",\"instructions\":\"\"}},{\"name\":\"resource_usage\",\"variables\":{\"CPU_usage\":\"low\",\"RAM_usage\":\"low\",\"storage_usage\":\"\",\"network_usage\":\"\"}},{\"name\":\"sensor_usage\",\"variables\":{\"Camera\":\"off\",\"Screen_brightness\":\"off\",\"GPS\":\"off\",\"Bluetooth\":\"off\",\"WIFI_usage\":\"off\"}},{\"name\":\"Operation_run_constraints\",\"variables\":{\"minimum_run_time\":\"\",\"maximum_run_time\":\"\",\"quota\":\"\",\"cooldown\":\"\",\"countdown\":\"\"}}],\"last_HCS\":{\"Cc\":0.6666666666666666,\"Ca\":1.6,\"Rc\":1.3333333333333333,\"Ra\":16,\"Nc\":0,\"Na\":2400,\"Sc\":0,\"Sa\":256,\"Camera\":\"off\",\"camera_weight\":0.1,\"Bluetooth\":\"off\",\"Bluetooth_weight\":0.35,\"WIFI_usage\":\"off\",\"WIFI_usage_weight\":0.35,\"GPS\":\"off\",\"GPS_weight\":0.2,\"Screen_brightness\":\"off\",\"Screen_brightness_weight\":\"\",\"cpuWeight\":0.3,\"ramWeight\":0.1,\"netWeight\":0.5,\"storWeight\":0.1,\"HcS\":13.333333333333334,\"SCS\":0,\"BCS\":4.1,\"Ocs\":17.433333333333334,\"operation_data_handling\":\"destroy\",\"operation_depth\":\"foreground\",\"operation_task_distribution\":\"centralized\",\"operation_id\":\"1707236036358\"}},{\"inner_id\":1707237432779,\"Name\":\"Log player action\",\"parent_id\":15,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"operation_ID\":1707237432779,\"operation_description\":\"Logs the player actions in the server\",\"operation_data_handling\":\"keep\",\"operation_task_distribution\":\"centralized\",\"operation_depth\":\"background\",\"instructions\":\"\"}},{\"name\":\"resource_usage\",\"variables\":{\"CPU_usage\":\"low\",\"RAM_usage\":\"low\",\"storage_usage\":\"medium\",\"network_usage\":\"medium\"}},{\"name\":\"sensor_usage\",\"variables\":{\"Camera\":\"off\",\"Screen_brightness\":\"off\",\"GPS\":\"off\",\"Bluetooth\":\"off\",\"WIFI_usage\":\"on\"}},{\"name\":\"Operation_run_constraints\",\"variables\":{\"minimum_run_time\":\"\",\"maximum_run_time\":\"\",\"quota\":\"\",\"cooldown\":\"\",\"countdown\":\"\"}}],\"last_HCS\":{\"Cc\":0.6666666666666666,\"Ca\":1.6,\"Rc\":1.3333333333333333,\"Ra\":16,\"Nc\":16.666666666666668,\"Na\":2400,\"Sc\":0.19999999999999998,\"Sa\":256,\"Camera\":\"off\",\"camera_weight\":0.1,\"Bluetooth\":\"off\",\"Bluetooth_weight\":0.35,\"WIFI_usage\":\"on\",\"WIFI_usage_weight\":0.35,\"GPS\":\"off\",\"GPS_weight\":0.2,\"Screen_brightness\":\"off\",\"Screen_brightness_weight\":\"\",\"cpuWeight\":0.3,\"ramWeight\":0.1,\"netWeight\":0.5,\"storWeight\":0.1,\"HcS\":13.688368055555555,\"SCS\":0,\"BCS\":4.1,\"Ocs\":17.788368055555555,\"operation_data_handling\":\"keep\",\"operation_depth\":\"background\",\"operation_task_distribution\":\"centralized\",\"operation_id\":\"1707237432779\"}},{\"inner_id\":1707238761028,\"Name\":\"Show next frames\",\"parent_id\":15,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"operation_ID\":1707238761028,\"operation_description\":\"The user sees the game change\",\"operation_data_handling\":\"destroy\",\"operation_task_distribution\":\"centralized\",\"operation_depth\":\"foreground\",\"instructions\":\"\"}},{\"name\":\"resource_usage\",\"variables\":{\"CPU_usage\":\"high\",\"RAM_usage\":\"high\",\"storage_usage\":\"low\",\"network_usage\":\"\"}},{\"name\":\"sensor_usage\",\"variables\":{\"Camera\":\"off\",\"Screen_brightness\":\"medium\",\"GPS\":\"off\",\"Bluetooth\":\"off\",\"WIFI_usage\":\"off\"}},{\"name\":\"Operation_run_constraints\",\"variables\":{\"minimum_run_time\":\"\",\"maximum_run_time\":\"\",\"quota\":\"\",\"cooldown\":\"\",\"countdown\":\"\"}}],\"last_HCS\":{\"Cc\":\"3.0\",\"Ca\":1.6,\"Rc\":\"5\",\"Ra\":16,\"Nc\":0,\"Na\":2400,\"Sc\":0.06666666666666667,\"Sa\":256,\"Camera\":\"off\",\"camera_weight\":0.1,\"Bluetooth\":\"off\",\"Bluetooth_weight\":0.35,\"WIFI_usage\":\"off\",\"WIFI_usage_weight\":0.35,\"GPS\":\"off\",\"GPS_weight\":0.2,\"Screen_brightness\":\"medium\",\"Screen_brightness_weight\":\"\",\"cpuWeight\":0.3,\"ramWeight\":0.1,\"netWeight\":0.5,\"storWeight\":0.1,\"HcS\":59.377604166666664,\"SCS\":6,\"BCS\":4.1,\"Ocs\":69.47760416666667,\"operation_data_handling\":\"destroy\",\"operation_depth\":\"foreground\",\"operation_task_distribution\":\"centralized\",\"operation_id\":\"1707238761028\"}}]],[\"resource_usage\",{\"CPU_usage\":\"\",\"RAM_usage\":\"\",\"storage_usage\":\"\",\"network_usage\":\"\"},\"object\",15,[]],[\"sensor_usage\",{\"Camera\":\"\",\"Screen_brightness\":\"\",\"GPS\":\"\",\"Bluetooth\":\"\",\"WIFI_usage\":\"\"},\"object\",15,[]],[\"Operation_run_constraints\",{\"minimum_run_time\":\"\",\"maximum_run_time\":\"\",\"quota\":\"\",\"cooldown\":\"\",\"countdown\":\"\"},\"object\",15,[]],[\"Parameters\",{\"parameter_ID\":\"\",\"parameter_description\":\"\",\"direction\":\"\",\"size\":\"\",\"origin\":\"\"},\"array\",\"root\",[{\"inner_id\":1707235898622,\"Name\":\"Load data\",\"parent_id\":19,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"parameter_ID\":1707235898622,\"parameter_description\":\"\",\"direction\":\"internal\",\"size\":\"200\",\"origin\":\"operation\"}}]},{\"inner_id\":1707236239033,\"Name\":\"Peripheral data\",\"parent_id\":19,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"parameter_ID\":1707236239033,\"parameter_description\":\"\",\"direction\":\"internal\",\"size\":\"0.016\",\"origin\":\"operation\"}}]},{\"inner_id\":1707237514775,\"Name\":\"Player action\",\"parent_id\":19,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"parameter_ID\":1707237514775,\"parameter_description\":\"\",\"direction\":\"external\",\"size\":\"0.001\",\"origin\":\"database\"}}]},{\"inner_id\":1707238718600,\"Name\":\"Video Frames\",\"parent_id\":19,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"parameter_ID\":1707238718600,\"parameter_description\":\"\",\"direction\":\"internal\",\"size\":\"100\",\"origin\":\"operation\"}}]},{\"inner_id\":1707238739691,\"Name\":\"Audio\",\"parent_id\":19,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"parameter_ID\":1707238739691,\"parameter_description\":\"\",\"direction\":\"\",\"size\":\"\",\"origin\":\"\"}}]}]],[\"Dependencies\",{},\"object\",\"root\",[]],[\"Operational\",{\"source_operation_id\":\"\",\"target_operation_ID\":\"\",\"operational_dependency_type\":\"\"},\"array\",20,[]],[\"Triggers\",{\"operation_id\":\"\",\"trigger_value\":\"\",\"trigger_Type\":\"\"},\"array\",20,[{\"inner_id\":1707235824088,\"Name\":\"Add a name with the pencil icon\",\"parent_id\":22,\"parent_instance_id\":null,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"operation_id\":\"1707235762173\",\"trigger_value\":\"run\",\"trigger_Type\":\"state\"}}]},{\"inner_id\":1707235974681,\"Name\":\"Add a name with the pencil icon\",\"parent_id\":22,\"parent_instance_id\":null,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"operation_id\":\"1707235846606\",\"trigger_value\":\"1707235898622\",\"trigger_Type\":\"parameter\"}}]},{\"inner_id\":1707236228175,\"Name\":\"Add a name with the pencil icon\",\"parent_id\":22,\"parent_instance_id\":null,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"operation_id\":\"1707235999190\",\"trigger_value\":\"1707236239033\",\"trigger_Type\":\"parameter\"}}]},{\"inner_id\":1707236323056,\"Name\":\"Add a name with the pencil icon\",\"parent_id\":22,\"parent_instance_id\":null,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"operation_id\":\"1707236036358\",\"trigger_value\":\"1707236239033\",\"trigger_Type\":\"parameter\"}}]},{\"inner_id\":1707238238875,\"Name\":\"Add a name with the pencil icon\",\"parent_id\":22,\"parent_instance_id\":null,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"operation_id\":\"1707237432779\",\"trigger_value\":\"1707237514775\",\"trigger_Type\":\"parameter\"}}]},{\"inner_id\":1707238898611,\"Name\":\"Add a name with the pencil icon\",\"parent_id\":22,\"parent_instance_id\":null,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"operation_id\":\"1707238761028\",\"trigger_value\":\"1707238718600\",\"trigger_Type\":\"parameter\"}}]}]],[\"Results\",{\"source_operation\":\"\",\"target_operation\":\"\",\"parameter\":\"\"},\"array\",20,[{\"inner_id\":1707235934225,\"Name\":\"Add a name with the pencil icon\",\"parent_id\":23,\"parent_instance_id\":null,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"source_operation\":\"1707235762173\",\"target_operation\":\"1707235846606\",\"parameter\":\"1707235898622\"}}]},{\"inner_id\":1707236268119,\"Name\":\"Add a name with the pencil icon\",\"parent_id\":23,\"parent_instance_id\":null,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"source_operation\":\"1707235846606\",\"target_operation\":\"1707235999190\",\"parameter\":\"1707236239033\"}}]},{\"inner_id\":1707236288484,\"Name\":\"Add a name with the pencil icon\",\"parent_id\":23,\"parent_instance_id\":null,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"source_operation\":\"1707235846606\",\"target_operation\":\"1707236036358\",\"parameter\":\"1707236239033\"}}]},{\"inner_id\":1707237543125,\"Name\":\"Add a name with the pencil icon\",\"parent_id\":23,\"parent_instance_id\":null,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"source_operation\":\"1707235846606\",\"target_operation\":\"1707237432779\",\"parameter\":\"1707237514775\"}}]},{\"inner_id\":1707238816226,\"Name\":\"Add a name with the pencil icon\",\"parent_id\":23,\"parent_instance_id\":null,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"source_operation\":\"1707235999190\",\"target_operation\":\"1707238761028\",\"parameter\":\"1707238718600\"}}]},{\"inner_id\":1707238818113,\"Name\":\"Add a name with the pencil icon\",\"parent_id\":23,\"parent_instance_id\":null,\"inner_variables\":[{\"name\":\"root\",\"variables\":{\"source_operation\":\"1707236036358\",\"target_operation\":\"1707238761028\",\"parameter\":\"1707238739691\"}}]}]]]","consumption_guide":1673607962764,"is_guide":false,"lowest_cs":17.433333333333334,"highest_cs":69.47760416666667}],"collection_Array":[{"element_name":"Test collection","inner_profiles":[1705313941736],"inner_collections":[],"collection_settings":{"exclusive_mode":false},"element_id":1706092190912,"element_type":"collection"}],"builderConfigurations":[{"element_id":1673607962764,"element_type":"profile","builder_configuration":[{"configuration_variables":[{"name":"name","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"description","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"data_dominant_software","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"computation_dominant_software","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"systems_software","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"platform_name","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"notes_on_the_platform","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"low","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"medium","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"high","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"notes","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"Camera","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"Screen_brightness","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"GPS","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"Bluetooth","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"category_name":"Categories","category_pseudonim":"","hide_category":false},{"category_name":"general_traits","category_pseudonim":"","hide_category":false},{"category_name":"sub_categories","category_pseudonim":"","hide_category":false},{"category_name":"consumption","category_pseudonim":"","hide_category":false},{"category_name":"CPU","category_pseudonim":"","hide_category":false},{"category_name":"RAM","category_pseudonim":"","hide_category":false},{"category_name":"Storage","category_pseudonim":"","hide_category":false},{"category_name":"Graphics","category_pseudonim":"","hide_category":false},{"category_name":"Network","category_pseudonim":"","hide_category":false}],"level":"1"}]},{"element_id":1707206804617,"element_type":"profile","builder_configuration":[{"configuration_variables":[{"name":"consumption_guide","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":true,"custom_value_load":""},{"name":"software_category","pseudonim":"Software_category","validating_expression_input":"","input_type":"Direct","custom_html":"</div><div id=\"metadata_anchor_1677581201404\" style=\"display:none;\"></div>\n<div class=\"col-md-12\">\n<select onchange=\"executeCustomCode('Software_category_reserved_code'); populateChildren('0',null,null,false,true);\" class=\"form-select\" id=\"Software_category_1673438264399\" aria-label=\"\">\n</select>\n</div>","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_1677581201404');\nlet custom_value = document.getElementById('Software_category_1673438264399').value;\n//to save the value of a custom element, pass to it the value in custom_value\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value)\n","hide_variable":false,"custom_value_load":"//first we have to populate the selector with the available options taken from the study on taxonomical hardware consumption\n//the name of the profile must always be \"Taxonomical consumption equivalences\"\nlet storage_place = findProfilePlaceInStorage('profile',this.element_to_edit.consumption_guide);\nconsole.log(\"place of taxonomical equivalences: \"+storage_place);\n//now that we have the place, we have to dissmember the JSON\n\nlet consumption_guide_id = this.element_to_edit.consumption_guide;\n\n//now that we have the consumption guide's id, we have to fetch it\n//taxonomical category profile (parsed) -> sub-categories-> instances\nlet taxonomy = JSON.parse(db.profile_Array[findProfilePlaceInStorage('profile',consumption_guide_id)].profile_cache);\n\n\n//we now have to get the names of the taxonomies\n//0 is for categories 4 is for the instances\n\nlet taxonomy_names = [];\n\nfor(let x in taxonomy[0][4] ){\n//inner_variables[0] is to get the root variables of the instance, where the name is stored\ntaxonomy_names.push([taxonomy[0][4][x].inner_variables[0].variables.name,taxonomy[0][4][x].inner_id]);\n}\n\n\n//we now place the available values in the selector\nlet selector = document.getElementById('Software_category_1673438264399');\n\nselector.innerHTML = '';\n\nselector.innerHTML+= '<option value=\"\">None</option>';\n\nfor(let x in taxonomy_names ){\nselector.innerHTML+= '<option value=\"'+taxonomy_names[x][1]+'\"'+(taxonomy_names[x][1]==property_value ? \"selected\" : \" \")+'>'+taxonomy_names[x][0]+'</option>';\n}\n"},{"name":"software_type","pseudonim":"Software_type","validating_expression_input":"","input_type":"Direct","custom_html":"</div><div id=\"metadata_anchor_1673438369152\" style=\"display:none;\"></div>\n<div class=\"col-md-12\">\n<select onchange=\"executeCustomCode('Software_type_reserved_code'); populateChildren('0',null,null,false,true);\" class=\"form-select\" id=\"software_type_1673438264399\" aria-label=\"\">\n</select>\n\n</div>","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_1673438369152');\nlet custom_value = document.getElementById('software_type_1673438264399').value;\n//to save the value of a custom element, pass to it the value in custom_value\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value)//available variables in the metadata: \n","hide_variable":false,"custom_value_load":"//first we have to populate the selector with the available options taken from the study on taxonomical hardware consumption\n//the name of the profile must always be \"Taxonomical consumption equivalences\"\n\nlet selected_category = document.getElementById('Software_category_1673438264399').value;\n\n//get the consumption guide id from the profile to edit:\n\nlet consumption_guide_id = this.element_to_edit.consumption_guide;\n\n//now that we have the consumption guide's id, we have to fetch it\n//taxonomical category profile (parsed) -> sub-categories-> instances\nlet taxonomy = JSON.parse(db.profile_Array[findProfilePlaceInStorage('profile',consumption_guide_id)].profile_cache)[2][4];\n\nlet taxonomy_names = [];\nfor(let x in taxonomy){\n//inner_variables[0] is to get the root variables of the instance, where the name is stored\n//we have to push the sub-categories that correspond to the selected category\nif(taxonomy[x].parent_instance_id == selected_category){\n    taxonomy_names.push([taxonomy[x].Name,taxonomy[x].inner_id]);\n}\n}\n//log\n//console.log(taxonomy_names);\n//we now place the available values in the selector\nlet selector = document.getElementById('software_type_1673438264399');\n\nselector.innerHTML = '';\nselector.innerHTML+= '<option value=\"\">None (uses the category)</option>';\n\nfor(let x in taxonomy_names ){\nselector.innerHTML+= '<option value=\"'+taxonomy_names[x][1]+'\"'+(taxonomy_names[x][1] == property_value ? \"selected\":\"\")+'>'+taxonomy_names[x][0]+'</option>';\n}\n\nlet category_selector  = document.getElementById('Software_category_1673438264399');"},{"name":"hardware_platform","pseudonim":"Hardware_platform","validating_expression_input":"","input_type":"Direct","custom_html":"</div><div id=\"metadata_anchor_1677668635060\" style=\"display:none;\"></div>\n<div class=\"col-md-12\">\n<select onchange=\"executeCustomCode('Hardware_platform_reserved_code'); populateChildren('0',null,null,false,true);\" class=\"form-select\" id=\"hardware_platform_1673438264399\" aria-label=\"\">\n</select>\n\n</div>","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_1677668635060');\nlet custom_value = document.getElementById('hardware_platform_1673438264399').value;\n//to save the value of a custom element, pass to it the value in custom_value\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value)//available variables in the metadata: \n","hide_variable":false,"custom_value_load":"\n\nlet selected_category = document.getElementById('Software_category_1673438264399').value;\nlet selected_type = document.getElementById('software_type_1673438264399').value;\n\n\n\nlet consumption_guide_id = this.element_to_edit.consumption_guide;\n\n//now that we have the consumption guide's id, we have to fetch it\n//taxonomical category profile (parsed) -> sub-categories-> instances\nlet taxonomy = JSON.parse(db.profile_Array[findProfilePlaceInStorage('profile',consumption_guide_id)].profile_cache)[9][4];\n\nif(selected_type ==\"\"){\n    selected_type = selected_category;\n    //now that we have the place, we have to dissmember the JSON\n    taxonomy =JSON.parse(db.profile_Array[1].profile_cache)[3][4];\n}\n//taxonomical category -> sub-categories-> instances\n//we now have to get the names of the taxonomies\n//               0 is for categories 4 is for the instances\n\nlet taxonomy_names = [];\nfor(let x in taxonomy){\n//inner_variables[0] is to get the root variables of the instance, where the name is stored\n//we have to push the sub-categories that correspond to the selected category\nif(taxonomy[x].parent_instance_id == selected_type){\n    taxonomy_names.push([taxonomy[x].Name,taxonomy[x].inner_id]);\n}\n}\n//log\n//console.log(taxonomy_names);\n//we now place the available values in the selector\nlet selector = document.getElementById('hardware_platform_1673438264399');\n\nselector.innerHTML = '';\nselector.innerHTML+= '<option value=\"\">None</option>';\n\nfor(let x in taxonomy_names ){\nselector.innerHTML+= '<option value=\"'+taxonomy_names[x][1]+'\"'+(taxonomy_names[x][1] == property_value ? \"selected\":\"\")+'>'+taxonomy_names[x][0]+'</option>';\n}\n\n"},{"name":"task_distribution","pseudonim":"Where_will_the_software_run?","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1673623152407\" style=\"display:none;\"></div>\n<small id=\"\" class=\"form-text text-muted\">\n(task distribution)\n</small>\n<div class=\"col-12\">\n<select onchange=\"executeCustomCode('Where_will_the_software_run?_reserved_code')\" class=\"form-select\" id=\"task_distribution_1672751800658\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This qualitative\nproperty defines if the computation that a software\nperforms has to be always executed in the same entity or it can\nbe distributed among several others. It also helps us\nto understand where energy is going to be consumed.\">\n  <option  value=\"centralized\">Always in the same device</option>\n\n  <option value=\"decentralized\">It doesn't matter where</option>\n</select>\n\n</div>\n\n\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1673623152407');\n\nlet select_value = document.getElementById(\"task_distribution_1672751800658\").value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name, select_value);","hide_variable":false,"custom_value_load":"//property_value\n//instance_id\n//parent_index\n\n\nwaitForElementToExist('#task_distribution_1672751800658').then((elm) => {\n//type your code here\ndocument.getElementById(\"task_distribution_1672751800658\").value = property_value;\nconsole.log(\"set the value to \"+document.getElementById(\"task_distribution_1672751800658\").value);\n$('#task_distribution_1672751800658').tooltip({placement:\"right\"});\n});"},{"name":"computational_criticality","pseudonim":"How_important_is_the_response_time_of_your_software?","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1673623420699\" style=\"display:none;\"></div>\n<small id=\"\" class=\"form-text text-muted\">\n(computational criticality)\n</small>\n<div class=\"col-12\">\n<select onchange=\"executeCustomCode('How_important_is_the_response_time_of_your_software?_reserved_code');\" class=\"form-select\" id=\"computation_criticality_1672751800658\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This qualitative\nand property is meant to define if the\ncomputational results are tied to a time constraint.\nKnowing there is a time constraint, we can manage\nthe software deployment to (as an examle) be hosted by the most\nenergy-efficient, computationally-fastest and physically-closest host.\n\">\n  <option  value=\"low\">It is not urgent</option>\n  <option value=\"medium\">It is important</option>\n  <option value=\"high\">It is critical</option>\n</select>\n\n</div>\n\n\n\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1673623420699');\n\nlet select_value = document.getElementById(\"computation_criticality_1672751800658\").value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name, select_value);","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#computation_criticality_1672751800658').then((elm) => {\n//type your code here\ndocument.getElementById(\"computation_criticality_1672751800658\").value = property_value;\nconsole.log(\"set the value to \"+document.getElementById(\"computation_criticality_1672751800658\").value);\n$('#computation_criticality_1672751800658').tooltip({placement:\"right\"});\n});"},{"name":"computation_complexity","pseudonim":"How_complicated_do_you_think_are_tasks_your_software_performs?","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1673624087008\" style=\"display:none;\"></div>\n<small id=\"\" class=\"form-text text-muted\">\n(computational complexity)\n</small>\n<div class=\"col-12\">\n<select onchange=\"executeCustomCode('How_complicated_do_you_think_are_tasks_your_software_performs?_reserved_code');\" class=\"form-select\" id=\"computation_complexity_1672751800658\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This\nqualitative and quantitative property establishes an\namount of computation required to accomplish the\ngoal of a service. It could aid in the estimation of the\nenergy cost the execution of a service implies.\">\n  <option  value=\"low\">It is simple</option>\n  <option value=\"medium\">It can get difficult</option>\n  <option value=\"high\">It is complicated</option>\n</select>\n\n</div>\n\n\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1673624087008');\n\nlet select_value = document.getElementById(\"computation_complexity_1672751800658\").value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name, select_value);","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#computation_complexity_1672751800658').then((elm) => {\n//type your code here\ndocument.getElementById(\"computation_complexity_1672751800658\").value = property_value;\nconsole.log(\"set the value to \"+document.getElementById(\"computation_complexity_1672751800658\").value);\n$('#computation_complexity_1672751800658').tooltip({placement:\"right\"});\n});"},{"name":"distribution_strategy","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":true,"custom_value_load":""},{"name":"data_flow_behavior","pseudonim":"Does_your_software_require_a_constant_network_connection?","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1673624837309\" style=\"display:none;\"></div>\n<small id=\"\" class=\"form-text text-muted\">\n(data flow behavior)\n</small>\n<div class=\"col-12\">\n<select onchange=\"executeCustomCode('Does_your_software_require_a_constant_network_connection?_reserved_code');\" class=\"form-select\" id=\"data_flow_behavior_1672751800658\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"right\" title=\"This qualitative property refers to the consistency of the data flow, where consumption of data can be, or not, interrupted. It helps us to identify when energy management strategies can be applied.\">\n  <option  value=\"regular\">Yes</option>\n  <option value=\"irregular\">No</option>\n</select>\n\n</div>\n\n\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1673624837309');\n\nlet select_value = document.getElementById(\"data_flow_behavior_1672751800658\").value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name, select_value);","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#data_flow_behavior_1672751800658').then((elm) => {\n//type your code here\ndocument.getElementById(\"data_flow_behavior_1672751800658\").value = property_value;\nconsole.log(\"set the value to \"+document.getElementById(\"data_flow_behavior_1672751800658\").value);\n$('#data_flow_behavior_1672751800658').tooltip({placement:\"right\"});\n});"},{"name":"data_flow_direction","pseudonim":"Does_your_software_only_sends_or_reads_information_or_both?","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1673972534099\" style=\"display:none;\"></div>\n<small id=\"\" class=\"form-text text-muted\">\n(data flow direction)\n</small>\n<div class=\"col-12\">\n<select onchange=\" executeCustomCode('Does_your_software_only_sends_or_reads_information_or_both?_reserved_code');\"class=\"form-select\" id=\"data_flow_direction_1672751800658\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"right\" title=\"Complementary to the previous property, this qualitative property defines whether data flows from or to the software or from and to the software. It helps us to identify a relationship of energy consumption among software and its components.\">\n  <option  value=\"unidirectional\">Only receives or sends data</option>\n  <option value=\"bidirectional\">It receives and sends data</option>\n</select>\n\n</div>\n\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1673972534099');\n\nlet select_value = document.getElementById(\"data_flow_direction_1672751800658\").value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name, select_value);","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#data_flow_behavior_1672751800658').then((elm) => {\n//type your code here\ndocument.getElementById(\"data_flow_direction_1672751800658\").value = property_value;\nconsole.log(\"set the value to \"+document.getElementById(\"data_flow_direction_1672751800658\").value);\n$('#data_flow_direction_1672751800658').tooltip({placement:\"right\"});\n});"},{"name":"data_handling","pseudonim":"What_does_your_software_do_to_the_data_it_receives_or_sends?","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1674059746602\" style=\"display:none;\"></div>\n<small id=\"\" class=\"form-text text-muted\">\n(data handling)\n</small>\n<div class=\"col-12\">\n<select onchange=\"executeCustomCode('What_does_your_software_do_to_the_data_it_receives_or_sends?_reserved_code');\" class=\"form-select\" id=\"data_handling_1672751800658\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"right\" title=\"This qualitative property establishes what is done to data after the software consumes it. This helps us to assess the storage consumption of a software.\n\">\n  <option  value=\"keep\">It stores the data after using it</option>\n  <option value=\"destroy\">It destroys data after using it</option>\n</select>\n\n</div>\n\n\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1674059746602');\n\nlet select_value = document.getElementById(\"data_handling_1672751800658\").value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name, select_value);","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#data_handling_1672751800658').then((elm) => {\n//type your code here\ndocument.getElementById(\"data_handling_1672751800658\").value = property_value;\nconsole.log(\"set the value to \"+document.getElementById(\"data_handling_1672751800658\").value);\n$('#data_handling_1672751800658').tooltip({placement:\"right\"});\n});"},{"name":"access_frequency","pseudonim":"Is_your_software_used_at_regular_intervals?","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1674120273538\" style=\"display:none;\"></div>\n<small id=\"\" class=\"form-text text-muted\">\n(access frequency)\n</small>\n<div class=\"col-12\">\n<select onchange=\"executeCustomCode('Is_your_software_used_at_regular_intervals?_reserved_code');\" class=\"form-select\" id=\"access_frequency_1672751800658\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"right\" title=\"This qualitative property is meant to defines how often the service can be accessed. It helps us to understand the predictability of its usage. e.g.: A highly predictable software that will be used every day at the same time has a regular interval.\">\n  <option  value=\"regular\">It is accessed at regular intervals (it is highly predictable)</option>\n  <option value=\"irregular\">It is accessed at irregular intervals (it is unpredictable)</option>\n</select>\n\n</div>\n\n\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1674120273538');\n\nlet select_value = document.getElementById(\"access_frequency_1672751800658\").value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name, select_value);","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#access_frequency_1672751800658').then((elm) => {\n//type your code here\ndocument.getElementById(\"access_frequency_1672751800658\").value = property_value;\nconsole.log(\"set the value to \"+document.getElementById(\"access_frequency_1672751800658\").value);\n$('#access_frequency_1672751800658').tooltip({placement:\"right\"});\n});"},{"name":"consumption_rate","pseudonim":"When_your_software_is_used_is_it_used_for_a_defined_duration?","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1674121126912\" style=\"display:none;\"></div>\n<small id=\"\" class=\"form-text text-muted\">\n(consumption rate)\n</small>\n<div class=\"col-12\">\n<select onchange=\"executeCustomCode('When_your_software_is_used_is_it_used_for_a_defined_duration?_reserved_code');\" class=\"form-select\" id=\"consumption_rate_1672751800658\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"right\" title=\"This qualitative property complements the previous one (access frequency). It defines if the usage of the software is well defined or undefined. Still confused? e.g.: You can use a video game every day in your free time (a predictable access frequency), if you always play for 30 minutes, it has a well defined duration (consumption rate). Otherwise, it does not have a well defined duration. It can also be understood as how\nlong whereas access frequency is Â¢ÂÂhow oftenÂ¢ÂÂ.\">\n  <option  value=\"definite\">Yes</option>\n  <option value=\"indefinite\">No</option>\n</select>\n\n</div>\n\n\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1674121126912');\n\nlet select_value = document.getElementById(\"consumption_rate_1672751800658\").value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name, select_value);","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#consumption_rate_1672751800658').then((elm) => {\n//type your code here\ndocument.getElementById(\"consumption_rate_1672751800658\").value = property_value;\nconsole.log(\"set the value to \"+document.getElementById(\"consumption_rate_1672751800658\").value);\n$('#consumption_rate_1672751800658').tooltip({placement:\"right\"});\n});"},{"name":"depth","pseudonim":"Is_the_software_directly_perceived_by_the_user?","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1674122804966\" style=\"display:none;\"></div>\n<small id=\"\" class=\"form-text text-muted\">\n(depth)\n</small>\n<div class=\"col-12\">\n<select onchange=\"executeCustomCode('Is_the_software_directly_perceived_by_the_user?_reserved_code')\" class=\"form-select\" id=\"depth_1672751800658\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"right\" title=\"This property defines an execution\nlevel for the software fragment you are profiling within the system the application is executed in. It also allows us to know if energy\nmanagement strategies can be applied to the service\nwithout detriment to the user. In other words, this property allows us to determine if we can apply energy management strategies on the sotware you are currently profiling without affecting the user.\">\n  <option  value=\"foreground\">Yes</option>\n  <option value=\"background\">No</option>\n</select>\n\n</div>\n\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1674122804966');\n\nlet select_value = document.getElementById(\"depth_1672751800658\").value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name, select_value);","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#depth_1672751800658').then((elm) => {\n//type your code here\ndocument.getElementById(\"depth_1672751800658\").value = property_value;\nconsole.log(\"set the value to \"+document.getElementById(\"depth_1672751800658\").value);\n$('#depth_1672751800658').tooltip({placement:\"right\"});\n});"},{"name":"dependence","pseudonim":"Select_one_of_the_options_below_to_define_a_dependency_relationship","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1674123586238\" style=\"display:none;\"></div>\n<small id=\"\" class=\"form-text text-muted\">\n(dependency)\n</small>\n<div class=\"col-12\">\n<select onchange=\"executeCustomCode('Select_one_of_the_options_below_to_define_a_dependency_relationship_reserved_code')\" class=\"form-select\" id=\"dependence_1672751800658\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"right\" title=\"This property establishes\nwhether the software you are profiling is subject to any relationship with\nothers.\">\n  <option  value=\"dependent\">This software/software fragment depends on other software</option>\n  <option value=\"dependee\">Other software depends on this one</option>\n  <option value=\"independent\">This software/software fragment is totally independent from others</option>\n</select>\n\n</div>\n\n\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1674123586238');\n\nlet select_value = document.getElementById(\"dependence_1672751800658\").value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name, select_value);","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#dependence_1672751800658').then((elm) => {\n//type your code here\ndocument.getElementById(\"dependence_1672751800658\").value = property_value;\nconsole.log(\"set the value to \"+document.getElementById(\"dependence_1672751800658\").value);\n$('#dependence_1672751800658').tooltip({placement:\"right\"});\n});"},{"name":"profile_evaluation_rate","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"run_base_probability","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"stop_base_probability","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"minimum_run_time","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"maximum_run_time","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"quota","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"cooldown","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"countdown","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"Days","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"Scale","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"time_range","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"evaluation_rate_override","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"run_probability_override","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"stop_probability_override","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"elasticity","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"minimum_run_probability","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"maximum_run_probability","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"minimum_stop_probability","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"maximum_stop_probability","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"positive_run_probability_modifier","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"negative_run_probability_modifier","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"positive_stop_probability_modifier","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"negative_stop_probability_modifier","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"initial_day","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"end_day","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"operation_ID","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":true,"custom_value_load":""},{"name":"operation_description","pseudonim":"Operation_description","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1681116351425\" style=\"display:none;\"></div>\n\n<div class=\"col-md-12 rule\">\n<textarea class=\"form-control\" id=\"Operation_description_1672751800658\" rows=\"4\" width=\"100%\"></textarea>\n<button class=\"generic_button border\" onClick=\"executeCustomCode('Operation_description_reserved_code')\" width=\"100%\">Save description</button> \n</div>\n\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1681116351425');\nlet select_value = document.getElementById(\"Operation_description_1672751800658\").value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,'', select_value);","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#Operation_description_1672751800658').then((elm) => {\n    //type your code here\n    document.getElementById(\"Operation_description_1672751800658\").value = property_value;\n    $('#Operation_description_1672751800658').tooltip({placement:\"right\"});\n    });"},{"name":"operation_data_handling","pseudonim":"What_does_your_operation_do_to_the_data_it_receives_or_sends?","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1674060543748\" style=\"display:none;\"></div>\n<small id=\"\" class=\"form-text text-muted\">\n(operation's data handling)\n</small>\n<div class=\"col-12\">\n<select onchange=\"executeCustomCode('What_does_your_operation_do_to_the_data_it_receives_or_sends?_reserved_code')\" class=\"form-select\" id=\"operation_data_handling_1672751800658\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"right\" title=\"This qualitative property establishes what is done to data after the operation consumes or produces it. This helps us to assess the storage consumption of a software.\n\">\n  <option  value=\"keep\">It stores the data after using it</option>\n  <option value=\"destroy\">It destroys data after using it</option>\n  <option value=\"broadcast\">Store and broadcast</option>\n</select>\n</div>\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1674060543748');\n\nlet select_value = document.getElementById(\"operation_data_handling_1672751800658\").value;\n\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,'', select_value);","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#operation_data_handling_1672751800658').then((elm) => {\n//type your code here\ndocument.getElementById(\"operation_data_handling_1672751800658\").value = property_value;\nconsole.log(\"set the value to \"+document.getElementById(\"operation_data_handling_1672751800658\").value);\n$('#operation_data_handling_1672751800658').tooltip({placement:\"right\"});\n});"},{"name":"operation_task_distribution","pseudonim":"Where_will_the_operation_run?","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1674063771378\" style=\"display:none;\"></div>\n<small id=\"\" class=\"form-text text-muted\">\n(operation's task distribution)\n</small>\n<div class=\"col-12\">\n<select onchange=\"executeCustomCode('Where_will_the_operation_run?_reserved_code')\" class=\"form-select\" id=\"operation_task_distribution_1672751800658\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This qualitative\nproperty defines if the operation must be always executend in the same entity or it can\nbe distributed among several others. It also helps us to understand where energy is going to be consumed.\">\n  <option  value=\"centralized\">Always in the same device</option>\n\n  <option value=\"decentralized\">It doesn't matter where</option>\n</select>\n</div>","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1674063771378');\n\nlet select_value = document.getElementById(\"operation_task_distribution_1672751800658\").value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name, select_value);","hide_variable":false,"custom_value_load":"//property_value\n//instance_id\n//parent_index\n\n\nwaitForElementToExist('#operation_task_distribution_1672751800658').then((elm) => {\n//type your code here\ndocument.getElementById(\"operation_task_distribution_1672751800658\").value = property_value;\nconsole.log(\"set the value to \"+document.getElementById(\"operation_task_distribution_1672751800658\").value);\n$('#operation_task_distribution_1672751800658').tooltip({placement:\"right\"});\n});"},{"name":"operation_depth","pseudonim":"Depth","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1681120650765\" style=\"display:none;\"></div>\n<small id=\"\" class=\"form-text text-muted\">\n(operation's depth)\n</small>\n<div class=\"col-12\">\n<select onchange=\"executeCustomCode('Depth_reserved_code')\" class=\"form-select\" id=\"Depth_1672751800658\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This qualitative\nproperty defines if the operation must be always executend in the same entity or it can\nbe distributed among several others. It also helps us to understand where energy is going to be consumed.\">\n  <option  value=\"foreground\">The user is aware of this operation (it visibly affects the GUI)</option>\n\n  <option value=\"background\">The user is not aware of this operation</option>\n</select>\n</div>\n\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1681120650765');\n\nlet select_value = document.getElementById(\"Depth_1672751800658\").value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name, select_value);\n","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#Depth_1672751800658').then((elm) => {\n    //type your code here\n    document.getElementById(\"Depth_1672751800658\").value = property_value;\n    $('#Depth_1672751800658').tooltip({placement:\"right\"});\n    });"},{"name":"instructions","pseudonim":"JavaScript_instructions","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1705482934327\" style=\"display:none;\"></div>\n<div id=\"operation_instructions_editor\"></div>\n<div id=\"second_test_html\"></div>","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_id');\n","hide_variable":true,"custom_value_load":"\n\nwaitForElementToExist('#operation_instructions_editor').then((elm) => {\n   let instructions_editor;\n instructions_editor= ace.edit(\"operation_instructions_editor\");\n    ace.require(\"ace/ext/language_tools\");\n    instructions_editor.setOptions({\n\n        highlightActiveLine: true,\n        enableLiveAutocompletion: true,\n        enableBasicAutocompletion: true\n    });\n    instructions_editor.setTheme(\"ace/theme/chrome\");\n    instructions_editor.session.setMode(\"ace/mode/javascript\");\n    document.getElementById('operation_instructions_editor').style.fontSize = '18px';\n    instructions_editor.setValue('');\n    });"},{"name":"CPU_usage","pseudonim":"Processor_usage","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1680545178145\" style=\"display:none;\"></div>\n\n<div class=\"col-md-12\">\n<select onchange=\"executeCustomCode('Processor_usage_reserved_code')\" class=\"form-select\" id=\"Processor_usage_1673438264399\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This property defines how much CPU usage the operation represents.\">\n<option value=\"\">None</option>\n<option value=\"low\">Low</option>\n<option value=\"medium\">Medium</option>\n<option value=\"high\">High</option>\n</select>\n</div>\n\n","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_1680545178145');\nlet custom_value = document.getElementById('Processor_usage_1673438264399').value;\n//to save the value of a custom element, pass to it the value in custom_value\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value)\n","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#Processor_usage_1673438264399').then((elm) => {\n    //type your code here\n    document.getElementById(\"Processor_usage_1673438264399\").value = property_value;\n    $('#Processor_usage_1673438264399').tooltip({placement:\"right\"});\n    });"},{"name":"RAM_usage","pseudonim":"RAM_usage","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1681033725495\" style=\"display:none;\"></div>\n\n<div class=\"col-md-12\">\n<select onchange=\"executeCustomCode('RAM_usage_reserved_code')\" class=\"form-select\" id=\"RAM_usage_1673438264399\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This property defines how much RAM usage the operation represents.\">\n<option value=\"\">None</option>\n<option value=\"low\">Low</option>\n<option value=\"medium\">Medium</option>\n<option value=\"high\">High</option>\n</select>\n</div>","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_1681033725495');\nlet custom_value = document.getElementById('RAM_usage_1673438264399').value;\n//to save the value of a custom element, pass to it the value in custom_value\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value)\n","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#RAM_usage_1673438264399').then((elm) => {\n    //type your code here\n    document.getElementById(\"RAM_usage_1673438264399\").value = property_value;\n    $('#RAM_usage_1673438264399').tooltip({placement:\"right\"});\n    });"},{"name":"storage_usage","pseudonim":"Storage_usage","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1681111109293\" style=\"display:none;\"></div>\n\n<div class=\"col-md-12\">\n<select onchange=\"executeCustomCode('Storage_usage_reserved_code')\" class=\"form-select\" id=\"Storage_usage_1673438264399\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This property defines how much Storage usage the operation represents.\">\n<option value=\"\">None</option>\n<option value=\"low\">Low</option>\n<option value=\"medium\">Medium</option>\n<option value=\"high\">High</option>\n</select>\n</div>\n","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_1681111109293');\nlet custom_value = document.getElementById('Storage_usage_1673438264399').value;\n//to save the value of a custom element, pass to it the value in custom_value\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value)\n","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#Storage_usage_1673438264399').then((elm) => {\n    //type your code here\n    document.getElementById(\"Storage_usage_1673438264399\").value = property_value;\n    $('#Storage_usage_1673438264399').tooltip({placement:\"right\"});\n    });"},{"name":"network_usage","pseudonim":"Network_usage","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1681112205991\" style=\"display:none;\"></div>\n\n<div class=\"col-md-12\">\n<select onchange=\"executeCustomCode('Network_usage_reserved_code')\" class=\"form-select\" id=\"Network_usage_1673438264399\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This property defines how much network usage the operation represents.\">\n<option value=\"\">None</option>\n<option value=\"low\">Low</option>\n<option value=\"medium\">Medium</option>\n<option value=\"high\">High</option>\n</select>\n</div>\n\n","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_1681112205991');\nlet custom_value = document.getElementById('Network_usage_1673438264399').value;\n//to save the value of a custom element, pass to it the value in custom_value\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value)\n","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#Network_usage_1673438264399').then((elm) => {\n    //type your code here\n    document.getElementById(\"Network_usage_1673438264399\").value = property_value;\n    $('#Network_usage_1673438264399').tooltip({placement:\"right\"});\n    });"},{"name":"Camera","pseudonim":"Camera_usage","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1681112558583\" style=\"display:none;\"></div>\n\n<div class=\"col-md-12\">\n<select onchange=\"executeCustomCode('Camera_usage_reserved_code')\" class=\"form-select\" id=\"Camera_usage_1673438264399\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This property defines how the camera is used by the operation.\">\n<option value=\"off\" selected=\"selected\">Off</option>\n<option value=\"cirumstancial\">Circumstancial</option>\n<option value=\"on\">On</option>\n</select>\n</div>\n\n","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_1681112558583');\nlet custom_value = document.getElementById('Camera_usage_1673438264399').value;\n//to save the value of a custom element, pass to it the value in custom_value\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value)\n","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#Camera_usage_1673438264399').then((elm) => {\n    //type your code here\n    document.getElementById(\"Camera_usage_1673438264399\").value = property_value;\n    $('#Camera_usage_1673438264399').tooltip({placement:\"right\"});\n    });"},{"name":"Screen_brightness","pseudonim":"Screen_brightness","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1681113716582\" style=\"display:none;\"></div>\n\n<div class=\"col-md-12\">\n<select onchange=\"executeCustomCode('Screen_brightness_reserved_code')\" class=\"form-select\" id=\"Screen_brightness_1673438264399\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This property defines how the camera is used by the operation.\">\n<option value=\"unused\" selected=\"selected\">Screen not used by this operation</option>\n<option value=\"off\" selected=\"selected\">Off</option>\n<option value=\"low\">Low</option>\n<option value=\"medium\">Medium</option>\n<option value=\"high\">High</option>\n<option value=\"auto\">Auto</option>\n</select>\n</div>","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_1681113716582');\nlet custom_value = document.getElementById('Screen_brightness_1673438264399').value;\n//to save the value of a custom element, pass to it the value in custom_value\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value)\n","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#Screen_brightness_1673438264399').then((elm) => {\n    //type your code here\n    document.getElementById(\"Screen_brightness_1673438264399\").value = property_value;\n    $('#Screen_brightness_1673438264399').tooltip({placement:\"right\"});\n    });"},{"name":"GPS","pseudonim":"GPS_usage","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1681114219737\" style=\"display:none;\"></div>\n\n<div class=\"col-md-12\">\n<select onchange=\"executeCustomCode('GPS_usage_reserved_code')\" class=\"form-select\" id=\"GPS_usage_1673438264399\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This property defines how the camera is used by the operation.\">\n<option value=\"off\" selected=\"selected\">Off</option>\n<option value=\"cirumstancial\">Circumstancial</option>\n<option value=\"on\">On</option>\n</select>\n</div>\n\n","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_1681114219737');\nlet custom_value = document.getElementById('GPS_usage_1673438264399').value;\n//to save the value of a custom element, pass to it the value in custom_value\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value)\n","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#GPS_usage_1673438264399').then((elm) => {\n    //type your code here\n    document.getElementById(\"GPS_usage_1673438264399\").value = property_value;\n    $('#GPS_usage_1673438264399').tooltip({placement:\"right\"});\n    });"},{"name":"Bluetooth","pseudonim":"Bluetooth_usage","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1681114887568\" style=\"display:none;\"></div>\n\n<div class=\"col-md-12\">\n<select onchange=\"executeCustomCode('Bluetooth_usage_reserved_code')\" class=\"form-select\" id=\"Bluetooth_usage_1673438264399\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This property defines how the camera is used by the operation.\">\n<option value=\"off\" selected=\"selected\">Off</option>\n<option value=\"cirumstancial\">Circumstancial</option>\n<option value=\"on\">On</option>\n</select>\n</div>\n\n","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_1681114887568');\nlet custom_value = document.getElementById('Bluetooth_usage_1673438264399').value;\n//to save the value of a custom element, pass to it the value in custom_value\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value)\n","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#Bluetooth_usage_1673438264399').then((elm) => {\n    //type your code here\n    document.getElementById(\"Bluetooth_usage_1673438264399\").value = property_value;\n    $('#Bluetooth_usage_1673438264399').tooltip({placement:\"right\"});\n    });"},{"name":"WIFI_usage","pseudonim":"WIFI_usage","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1681115989226\" style=\"display:none;\"></div>\n\n<div class=\"col-md-12\">\n<select onchange=\"executeCustomCode('WIFI_usage_reserved_code')\" class=\"form-select\" id=\"WIFI_usage_1673438264399\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This property defines how the camera is used by the operation.\">\n<option value=\"off\" selected=\"selected\">Off</option>\n<option value=\"cirumstancial\">Circumstancial</option>\n<option value=\"on\">On</option>\n</select>\n</div>\n\n","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_1681115989226');\nlet custom_value = document.getElementById('WIFI_usage_1673438264399').value;\n//to save the value of a custom element, pass to it the value in custom_value\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value)\n","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#WIFI_usage_1673438264399').then((elm) => {\n    //type your code here\n    document.getElementById(\"WIFI_usage_1673438264399\").value = property_value;\n    $('#WIFI_usage_1673438264399').tooltip({placement:\"right\"});\n    });"},{"name":"source_operation_id","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"target_operation_ID","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"operational_dependency_type","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"operation_id","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"trigger_value","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"trigger_Type","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"source_operation","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"target_operation","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"parameter","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"parameter_ID","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":true,"custom_value_load":""},{"name":"parameter_description","pseudonim":"Parameter_description","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1681121800494\" style=\"display:none;\"></div>\n\n<div class=\"col-md-12 rule\">\n<textarea class=\"form-control\" id=\"Parameter_description_1672751800658\" rows=\"4\" width=\"100%\"></textarea>\n<button class=\"generic_button border\" onClick=\"executeCustomCode('Parameter_description_reserved_code')\" width=\"100%\">Save description</button> \n</div>\n\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1681121800494');\nlet select_value = document.getElementById(\"Parameter_description_1672751800658\").value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,'', select_value);\n","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#Parameter_description_1672751800658').then((elm) => {\n    //type your code here\n    document.getElementById(\"Parameter_description_1672751800658\").value = property_value;\n    $('#Parameter_description_1672751800658').tooltip({placement:\"right\"});\n    });"},{"name":"direction","pseudonim":"Parameter_direction","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1681122823127\" style=\"display:none;\"></div>\n\n<div class=\"col-md-12\">\n<select onchange=\"executeCustomCode('Parameter_direction_reserved_code')\" class=\"form-select\" id=\"Parameter_direction_1673438264399\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This property defines if the parameter is used within the profile or out to the network or other profiles.\">\n<option value=\"external\" selected=\"selected\">External (other profiles/network)</option>\n<option value=\"internal\">Internal (only used in this profile)</option>\n</select>\n</div>\n\n","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_1681122823127');\nlet custom_value = document.getElementById('Parameter_direction_1673438264399').value;\n//to save the value of a custom element, pass to it the value in custom_value\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value);\n","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#Parameter_direction_1673438264399').then((elm) => {\n    //type your code here\n    document.getElementById(\"Parameter_direction_1673438264399\").value = property_value;\n    $('#Parameter_direction_1673438264399').tooltip({placement:\"right\"});\n    });"},{"name":"size","pseudonim":"Parameter_size","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1681123677855\" style=\"display:none;\"></div>\n\n<div class=\"col-md-12 rule\">\n(In MB)\n<input type=\"number\" class=\"form-control\" id=\"Parameter_size_1681123730920\" aria-describedby=\"\" placeholder=\"Enter the parameter size in MB\">\n<button class=\"generic_button border\"onClick=\"executeCustomCode('Parameter_size_reserved_code')\" >Save</button>\n</div>\n\n\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1681123677855');\n\nlet custom_value = document.getElementById('Parameter_size_1681123730920').value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value)","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#Parameter_size_1681123730920').then((elm) => {\n    //type your code here\n    document.getElementById(\"Parameter_size_1681123730920\").value = property_value;\n    $('#Parameter_size_1681123730920').tooltip({placement:\"right\"});\n    });"},{"name":"origin","pseudonim":"Where_is_the_parameter_obtained_from?","validating_expression_input":"","input_type":"Direct","custom_html":"\n<div id=\"metadata_anchor_1681124227816\" style=\"display:none;\"></div>\n\n<div class=\"col-md-12\">\n<select onchange=\"executeCustomCode('Where_is_the_parameter_obtained_from?_reserved_code')\" class=\"form-select\" id=\"o1705484374338\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This property defines if the parameter is used within the profile or out to the network or other profiles.\">\n<option value=\"operation\" selected=\"selected\">The parameter comes from an operation</option>\n<option value=\"database\">The parameter comes from a database or another source</option>\n</select>\n</div>\n","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_1681124227816');\nlet custom_value = document.getElementById('o1705484374338').value;\n//to save the value of a custom element, pass to it the value in custom_value\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value);\n","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#o1705484374338').then((elm) => {\n    //type your code here\n    document.getElementById(\"o1705484374338\").value = property_value;\n    $('#o1705484374338').tooltip({placement:\"right\"});\n    });"},{"category_name":"Profile_configuration","category_pseudonim":"Model_characteristics","hide_category":false},{"category_name":"Computation_centric","category_pseudonim":"Computational_behavior","hide_category":false},{"category_name":"Data_centric","category_pseudonim":"Relationship_with_data","hide_category":false},{"category_name":"Conduct_centric","category_pseudonim":"General_behavior","hide_category":false},{"category_name":"Usage","category_pseudonim":"","hide_category":true},{"category_name":"Run_constraints","category_pseudonim":"","hide_category":true},{"category_name":"Expectations","category_pseudonim":"","hide_category":true},{"category_name":"Cycles","category_pseudonim":"","hide_category":true},{"category_name":"Timed_expectations","category_pseudonim":"test","hide_category":true},{"category_name":"Elasticity","category_pseudonim":"","hide_category":true},{"category_name":"Events","category_pseudonim":"","hide_category":true},{"category_name":"Operations","category_pseudonim":"Functions_or_Methods","hide_category":false},{"category_name":"resource_usage","category_pseudonim":"Basic_Hardware_Usage","hide_category":false},{"category_name":"sensor_usage","category_pseudonim":"Sensor/Actuator_Usage","hide_category":false},{"category_name":"Operation_run_constraints","category_pseudonim":"","hide_category":true},{"category_name":"Parameters","category_pseudonim":"","hide_category":false},{"category_name":"Dependencies","category_pseudonim":"","hide_category":true},{"category_name":"Operational","category_pseudonim":"","hide_category":true},{"category_name":"Triggers","category_pseudonim":"","hide_category":true},{"category_name":"Results","category_pseudonim":"","hide_category":true}],"level":"1"}]},{"element_id":887770500712,"element_type":"profile","builder_configuration":[{"configuration_variables":[{"name":"consumption_guide","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":true,"custom_value_load":""},{"name":"software_category","pseudonim":"Software_category","validating_expression_input":"","input_type":"Direct","custom_html":"</div><div id=\"metadata_anchor_1677581201404\" style=\"display:none;\"></div>\n<div class=\"col-md-12\">\n<select onchange=\"executeCustomCode('Software_category_reserved_code'); populateChildren('0',null,null,false,true);\" class=\"form-select\" id=\"Software_category_1673438264399\" aria-label=\"\">\n</select>\n</div>","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_1677581201404');\nlet custom_value = document.getElementById('Software_category_1673438264399').value;\n//to save the value of a custom element, pass to it the value in custom_value\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value)\n","hide_variable":false,"custom_value_load":"//first we have to populate the selector with the available options taken from the study on taxonomical hardware consumption\n//the name of the profile must always be \"Taxonomical consumption equivalences\"\nlet storage_place = findProfilePlaceInStorage('profile',this.element_to_edit.consumption_guide);\nconsole.log(\"place of taxonomical equivalences: \"+storage_place);\n//now that we have the place, we have to dissmember the JSON\n\nlet consumption_guide_id = this.element_to_edit.consumption_guide;\n\n//now that we have the consumption guide's id, we have to fetch it\n//taxonomical category profile (parsed) -> sub-categories-> instances\nlet taxonomy = JSON.parse(db.profile_Array[findProfilePlaceInStorage('profile',consumption_guide_id)].profile_cache);\n\n\n//we now have to get the names of the taxonomies\n//0 is for categories 4 is for the instances\n\nlet taxonomy_names = [];\n\nfor(let x in taxonomy[0][4] ){\n//inner_variables[0] is to get the root variables of the instance, where the name is stored\ntaxonomy_names.push([taxonomy[0][4][x].inner_variables[0].variables.name,taxonomy[0][4][x].inner_id]);\n}\n\n\n//we now place the available values in the selector\nlet selector = document.getElementById('Software_category_1673438264399');\n\nselector.innerHTML = '';\n\nselector.innerHTML+= '<option value=\"\">None</option>';\n\nfor(let x in taxonomy_names ){\nselector.innerHTML+= '<option value=\"'+taxonomy_names[x][1]+'\"'+(taxonomy_names[x][1]==property_value ? \"selected\" : \" \")+'>'+taxonomy_names[x][0]+'</option>';\n}\n"},{"name":"software_type","pseudonim":"Software_type","validating_expression_input":"","input_type":"Direct","custom_html":"</div><div id=\"metadata_anchor_1673438369152\" style=\"display:none;\"></div>\n<div class=\"col-md-12\">\n<select onchange=\"executeCustomCode('Software_type_reserved_code'); populateChildren('0',null,null,false,true);\" class=\"form-select\" id=\"software_type_1673438264399\" aria-label=\"\">\n</select>\n\n</div>","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_1673438369152');\nlet custom_value = document.getElementById('software_type_1673438264399').value;\n//to save the value of a custom element, pass to it the value in custom_value\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value)//available variables in the metadata: \n","hide_variable":false,"custom_value_load":"//first we have to populate the selector with the available options taken from the study on taxonomical hardware consumption\n//the name of the profile must always be \"Taxonomical consumption equivalences\"\n\nlet selected_category = document.getElementById('Software_category_1673438264399').value;\n\n//get the consumption guide id from the profile to edit:\n\nlet consumption_guide_id = this.element_to_edit.consumption_guide;\n\n//now that we have the consumption guide's id, we have to fetch it\n//taxonomical category profile (parsed) -> sub-categories-> instances\nlet taxonomy = JSON.parse(db.profile_Array[findProfilePlaceInStorage('profile',consumption_guide_id)].profile_cache)[2][4];\n\nlet taxonomy_names = [];\nfor(let x in taxonomy){\n//inner_variables[0] is to get the root variables of the instance, where the name is stored\n//we have to push the sub-categories that correspond to the selected category\nif(taxonomy[x].parent_instance_id == selected_category){\n    taxonomy_names.push([taxonomy[x].Name,taxonomy[x].inner_id]);\n}\n}\n//log\n//console.log(taxonomy_names);\n//we now place the available values in the selector\nlet selector = document.getElementById('software_type_1673438264399');\n\nselector.innerHTML = '';\nselector.innerHTML+= '<option value=\"\">None (uses the category)</option>';\n\nfor(let x in taxonomy_names ){\nselector.innerHTML+= '<option value=\"'+taxonomy_names[x][1]+'\"'+(taxonomy_names[x][1] == property_value ? \"selected\":\"\")+'>'+taxonomy_names[x][0]+'</option>';\n}\n\nlet category_selector  = document.getElementById('Software_category_1673438264399');"},{"name":"hardware_platform","pseudonim":"Hardware_platform","validating_expression_input":"","input_type":"Direct","custom_html":"</div><div id=\"metadata_anchor_1677668635060\" style=\"display:none;\"></div>\n<div class=\"col-md-12\">\n<select onchange=\"executeCustomCode('Hardware_platform_reserved_code'); populateChildren('0',null,null,false,true);\" class=\"form-select\" id=\"hardware_platform_1673438264399\" aria-label=\"\">\n</select>\n\n</div>","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_1677668635060');\nlet custom_value = document.getElementById('hardware_platform_1673438264399').value;\n//to save the value of a custom element, pass to it the value in custom_value\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value)//available variables in the metadata: \n","hide_variable":false,"custom_value_load":"\n\nlet selected_category = document.getElementById('Software_category_1673438264399').value;\nlet selected_type = document.getElementById('software_type_1673438264399').value;\n\n\n\nlet consumption_guide_id = this.element_to_edit.consumption_guide;\n\n//now that we have the consumption guide's id, we have to fetch it\n//taxonomical category profile (parsed) -> sub-categories-> instances\nlet taxonomy = JSON.parse(db.profile_Array[findProfilePlaceInStorage('profile',consumption_guide_id)].profile_cache)[9][4];\n\nif(selected_type ==\"\"){\n    selected_type = selected_category;\n    //now that we have the place, we have to dissmember the JSON\n    taxonomy =JSON.parse(db.profile_Array[1].profile_cache)[3][4];\n}\n//taxonomical category -> sub-categories-> instances\n//we now have to get the names of the taxonomies\n//               0 is for categories 4 is for the instances\n\nlet taxonomy_names = [];\nfor(let x in taxonomy){\n//inner_variables[0] is to get the root variables of the instance, where the name is stored\n//we have to push the sub-categories that correspond to the selected category\nif(taxonomy[x].parent_instance_id == selected_type){\n    taxonomy_names.push([taxonomy[x].Name,taxonomy[x].inner_id]);\n}\n}\n//log\n//console.log(taxonomy_names);\n//we now place the available values in the selector\nlet selector = document.getElementById('hardware_platform_1673438264399');\n\nselector.innerHTML = '';\nselector.innerHTML+= '<option value=\"\">None</option>';\n\nfor(let x in taxonomy_names ){\nselector.innerHTML+= '<option value=\"'+taxonomy_names[x][1]+'\"'+(taxonomy_names[x][1] == property_value ? \"selected\":\"\")+'>'+taxonomy_names[x][0]+'</option>';\n}\n\n"},{"name":"task_distribution","pseudonim":"Where_will_the_software_run?","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1673623152407\" style=\"display:none;\"></div>\n<small id=\"\" class=\"form-text text-muted\">\n(task distribution)\n</small>\n<div class=\"col-12\">\n<select onchange=\"executeCustomCode('Where_will_the_software_run?_reserved_code')\" class=\"form-select\" id=\"task_distribution_1672751800658\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This qualitative\nproperty defines if the computation that a software\nperforms has to be always executed in the same entity or it can\nbe distributed among several others. It also helps us\nto understand where energy is going to be consumed.\">\n  <option  value=\"centralized\">Always in the same device</option>\n\n  <option value=\"decentralized\">It doesn't matter where</option>\n</select>\n\n</div>\n\n\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1673623152407');\n\nlet select_value = document.getElementById(\"task_distribution_1672751800658\").value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name, select_value);","hide_variable":false,"custom_value_load":"//property_value\n//instance_id\n//parent_index\n\n\nwaitForElementToExist('#task_distribution_1672751800658').then((elm) => {\n//type your code here\ndocument.getElementById(\"task_distribution_1672751800658\").value = property_value;\nconsole.log(\"set the value to \"+document.getElementById(\"task_distribution_1672751800658\").value);\n$('#task_distribution_1672751800658').tooltip({placement:\"right\"});\n});"},{"name":"computational_criticality","pseudonim":"How_important_is_the_response_time_of_your_software?","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1673623420699\" style=\"display:none;\"></div>\n<small id=\"\" class=\"form-text text-muted\">\n(computational criticality)\n</small>\n<div class=\"col-12\">\n<select onchange=\"executeCustomCode('How_important_is_the_response_time_of_your_software?_reserved_code');\" class=\"form-select\" id=\"computation_criticality_1672751800658\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This qualitative\nand property is meant to define if the\ncomputational results are tied to a time constraint.\nKnowing there is a time constraint, we can manage\nthe software deployment to (as an examle) be hosted by the most\nenergy-efficient, computationally-fastest and physically-closest host.\n\">\n  <option  value=\"low\">It is not urgent</option>\n  <option value=\"medium\">It is important</option>\n  <option value=\"high\">It is critical</option>\n</select>\n\n</div>\n\n\n\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1673623420699');\n\nlet select_value = document.getElementById(\"computation_criticality_1672751800658\").value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name, select_value);","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#computation_criticality_1672751800658').then((elm) => {\n//type your code here\ndocument.getElementById(\"computation_criticality_1672751800658\").value = property_value;\nconsole.log(\"set the value to \"+document.getElementById(\"computation_criticality_1672751800658\").value);\n$('#computation_criticality_1672751800658').tooltip({placement:\"right\"});\n});"},{"name":"computation_complexity","pseudonim":"How_complicated_do_you_think_are_tasks_your_software_performs?","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1673624087008\" style=\"display:none;\"></div>\n<small id=\"\" class=\"form-text text-muted\">\n(computational complexity)\n</small>\n<div class=\"col-12\">\n<select onchange=\"executeCustomCode('How_complicated_do_you_think_are_tasks_your_software_performs?_reserved_code');\" class=\"form-select\" id=\"computation_complexity_1672751800658\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This\nqualitative and quantitative property establishes an\namount of computation required to accomplish the\ngoal of a service. It could aid in the estimation of the\nenergy cost the execution of a service implies.\">\n  <option  value=\"low\">It is simple</option>\n  <option value=\"medium\">It can get difficult</option>\n  <option value=\"high\">It is complicated</option>\n</select>\n\n</div>\n\n\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1673624087008');\n\nlet select_value = document.getElementById(\"computation_complexity_1672751800658\").value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name, select_value);","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#computation_complexity_1672751800658').then((elm) => {\n//type your code here\ndocument.getElementById(\"computation_complexity_1672751800658\").value = property_value;\nconsole.log(\"set the value to \"+document.getElementById(\"computation_complexity_1672751800658\").value);\n$('#computation_complexity_1672751800658').tooltip({placement:\"right\"});\n});"},{"name":"distribution_strategy","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":true,"custom_value_load":""},{"name":"data_flow_behavior","pseudonim":"Does_your_software_require_a_constant_network_connection?","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1673624837309\" style=\"display:none;\"></div>\n<small id=\"\" class=\"form-text text-muted\">\n(data flow behavior)\n</small>\n<div class=\"col-12\">\n<select onchange=\"executeCustomCode('Does_your_software_require_a_constant_network_connection?_reserved_code');\" class=\"form-select\" id=\"data_flow_behavior_1672751800658\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"right\" title=\"This qualitative property refers to the consistency of the data flow, where consumption of data can be, or not, interrupted. It helps us to identify when energy management strategies can be applied.\">\n  <option  value=\"regular\">Yes</option>\n  <option value=\"irregular\">No</option>\n</select>\n\n</div>\n\n\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1673624837309');\n\nlet select_value = document.getElementById(\"data_flow_behavior_1672751800658\").value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name, select_value);","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#data_flow_behavior_1672751800658').then((elm) => {\n//type your code here\ndocument.getElementById(\"data_flow_behavior_1672751800658\").value = property_value;\nconsole.log(\"set the value to \"+document.getElementById(\"data_flow_behavior_1672751800658\").value);\n$('#data_flow_behavior_1672751800658').tooltip({placement:\"right\"});\n});"},{"name":"data_flow_direction","pseudonim":"Does_your_software_only_sends_or_reads_information_or_both?","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1673972534099\" style=\"display:none;\"></div>\n<small id=\"\" class=\"form-text text-muted\">\n(data flow direction)\n</small>\n<div class=\"col-12\">\n<select onchange=\" executeCustomCode('Does_your_software_only_sends_or_reads_information_or_both?_reserved_code');\"class=\"form-select\" id=\"data_flow_direction_1672751800658\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"right\" title=\"Complementary to the previous property, this qualitative property defines whether data flows from or to the software or from and to the software. It helps us to identify a relationship of energy consumption among software and its components.\">\n  <option  value=\"unidirectional\">Only receives or sends data</option>\n  <option value=\"bidirectional\">It receives and sends data</option>\n</select>\n\n</div>\n\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1673972534099');\n\nlet select_value = document.getElementById(\"data_flow_direction_1672751800658\").value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name, select_value);","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#data_flow_behavior_1672751800658').then((elm) => {\n//type your code here\ndocument.getElementById(\"data_flow_direction_1672751800658\").value = property_value;\nconsole.log(\"set the value to \"+document.getElementById(\"data_flow_direction_1672751800658\").value);\n$('#data_flow_direction_1672751800658').tooltip({placement:\"right\"});\n});"},{"name":"data_handling","pseudonim":"What_does_your_software_do_to_the_data_it_receives_or_sends?","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1674059746602\" style=\"display:none;\"></div>\n<small id=\"\" class=\"form-text text-muted\">\n(data handling)\n</small>\n<div class=\"col-12\">\n<select onchange=\"executeCustomCode('What_does_your_software_do_to_the_data_it_receives_or_sends?_reserved_code');\" class=\"form-select\" id=\"data_handling_1672751800658\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"right\" title=\"This qualitative property establishes what is done to data after the software consumes it. This helps us to assess the storage consumption of a software.\n\">\n  <option  value=\"keep\">It stores the data after using it</option>\n  <option value=\"destroy\">It destroys data after using it</option>\n</select>\n\n</div>\n\n\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1674059746602');\n\nlet select_value = document.getElementById(\"data_handling_1672751800658\").value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name, select_value);","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#data_handling_1672751800658').then((elm) => {\n//type your code here\ndocument.getElementById(\"data_handling_1672751800658\").value = property_value;\nconsole.log(\"set the value to \"+document.getElementById(\"data_handling_1672751800658\").value);\n$('#data_handling_1672751800658').tooltip({placement:\"right\"});\n});"},{"name":"access_frequency","pseudonim":"Is_your_software_used_at_regular_intervals?","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1674120273538\" style=\"display:none;\"></div>\n<small id=\"\" class=\"form-text text-muted\">\n(access frequency)\n</small>\n<div class=\"col-12\">\n<select onchange=\"executeCustomCode('Is_your_software_used_at_regular_intervals?_reserved_code');\" class=\"form-select\" id=\"access_frequency_1672751800658\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"right\" title=\"This qualitative property is meant to defines how often the service can be accessed. It helps us to understand the predictability of its usage. e.g.: A highly predictable software that will be used every day at the same time has a regular interval.\">\n  <option  value=\"regular\">It is accessed at regular intervals (it is highly predictable)</option>\n  <option value=\"irregular\">It is accessed at irregular intervals (it is unpredictable)</option>\n</select>\n\n</div>\n\n\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1674120273538');\n\nlet select_value = document.getElementById(\"access_frequency_1672751800658\").value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name, select_value);","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#access_frequency_1672751800658').then((elm) => {\n//type your code here\ndocument.getElementById(\"access_frequency_1672751800658\").value = property_value;\nconsole.log(\"set the value to \"+document.getElementById(\"access_frequency_1672751800658\").value);\n$('#access_frequency_1672751800658').tooltip({placement:\"right\"});\n});"},{"name":"consumption_rate","pseudonim":"When_your_software_is_used_is_it_used_for_a_defined_duration?","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1674121126912\" style=\"display:none;\"></div>\n<small id=\"\" class=\"form-text text-muted\">\n(consumption rate)\n</small>\n<div class=\"col-12\">\n<select onchange=\"executeCustomCode('When_your_software_is_used_is_it_used_for_a_defined_duration?_reserved_code');\" class=\"form-select\" id=\"consumption_rate_1672751800658\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"right\" title=\"This qualitative property complements the previous one (access frequency). It defines if the usage of the software is well defined or undefined. Still confused? e.g.: You can use a video game every day in your free time (a predictable access frequency), if you always play for 30 minutes, it has a well defined duration (consumption rate). Otherwise, it does not have a well defined duration. It can also be understood as Â¢ÂÂ how\nlongÂ¢ÂÂ whereas access frequency is Â¢ÂÂhow oftenÂ¢ÂÂ.\">\n  <option  value=\"definite\">Yes</option>\n  <option value=\"indefinite\">No</option>\n</select>\n\n</div>\n\n\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1674121126912');\n\nlet select_value = document.getElementById(\"consumption_rate_1672751800658\").value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name, select_value);","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#consumption_rate_1672751800658').then((elm) => {\n//type your code here\ndocument.getElementById(\"consumption_rate_1672751800658\").value = property_value;\nconsole.log(\"set the value to \"+document.getElementById(\"consumption_rate_1672751800658\").value);\n$('#consumption_rate_1672751800658').tooltip({placement:\"right\"});\n});"},{"name":"depth","pseudonim":"Is_the_software_directly_perceived_by_the_user?","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1674122804966\" style=\"display:none;\"></div>\n<small id=\"\" class=\"form-text text-muted\">\n(depth)\n</small>\n<div class=\"col-12\">\n<select onchange=\"executeCustomCode('Is_the_software_directly_perceived_by_the_user?_reserved_code')\" class=\"form-select\" id=\"depth_1672751800658\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"right\" title=\"This property defines an execution\nlevel for the software fragment you are profiling within the system the application is executed in. It also allows us to know if energy\nmanagement strategies can be applied to the service\nwithout detriment to the user. In other words, this property allows us to determine if we can apply energy management strategies on the sotware you are currently profiling without affecting the user.\">\n  <option  value=\"foreground\">Yes</option>\n  <option value=\"background\">No</option>\n</select>\n\n</div>\n\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1674122804966');\n\nlet select_value = document.getElementById(\"depth_1672751800658\").value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name, select_value);","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#depth_1672751800658').then((elm) => {\n//type your code here\ndocument.getElementById(\"depth_1672751800658\").value = property_value;\nconsole.log(\"set the value to \"+document.getElementById(\"depth_1672751800658\").value);\n$('#depth_1672751800658').tooltip({placement:\"right\"});\n});"},{"name":"dependence","pseudonim":"Select_one_of_the_options_below_to_define_a_dependency_relationship","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1674123586238\" style=\"display:none;\"></div>\n<small id=\"\" class=\"form-text text-muted\">\n(dependency)\n</small>\n<div class=\"col-12\">\n<select onchange=\"executeCustomCode('Select_one_of_the_options_below_to_define_a_dependency_relationship_reserved_code')\" class=\"form-select\" id=\"dependence_1672751800658\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"right\" title=\"This property establishes\nwhether the software you are profiling is subject to any relationship with\nothers.\">\n  <option  value=\"dependent\">This software/software fragment depends on other software</option>\n  <option value=\"dependee\">Other software depends on this one</option>\n  <option value=\"independent\">This software/software fragment is totally independent from others</option>\n</select>\n\n</div>\n\n\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1674123586238');\n\nlet select_value = document.getElementById(\"dependence_1672751800658\").value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name, select_value);","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#dependence_1672751800658').then((elm) => {\n//type your code here\ndocument.getElementById(\"dependence_1672751800658\").value = property_value;\nconsole.log(\"set the value to \"+document.getElementById(\"dependence_1672751800658\").value);\n$('#dependence_1672751800658').tooltip({placement:\"right\"});\n});"},{"name":"profile_evaluation_rate","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"run_base_probability","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"stop_base_probability","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"minimum_run_time","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"maximum_run_time","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"quota","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"cooldown","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"countdown","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"Days","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"Scale","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"time_range","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"evaluation_rate_override","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"run_probability_override","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"stop_probability_override","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"elasticity","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"minimum_run_probability","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"maximum_run_probability","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"minimum_stop_probability","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"maximum_stop_probability","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"positive_run_probability_modifier","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"negative_run_probability_modifier","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"positive_stop_probability_modifier","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"negative_stop_probability_modifier","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"initial_day","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"end_day","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"operation_ID","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":true,"custom_value_load":""},{"name":"operation_description","pseudonim":"Operation_description","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1681116351425\" style=\"display:none;\"></div>\n\n<div class=\"col-md-12 rule\">\n<textarea class=\"form-control\" id=\"Operation_description_1672751800658\" rows=\"4\" width=\"100%\"></textarea>\n<button class=\"generic_button border\" onClick=\"executeCustomCode('Operation_description_reserved_code')\" width=\"100%\">Save description</button> \n</div>\n\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1681116351425');\nlet select_value = document.getElementById(\"Operation_description_1672751800658\").value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,'', select_value);","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#Operation_description_1672751800658').then((elm) => {\n    //type your code here\n    document.getElementById(\"Operation_description_1672751800658\").value = property_value;\n    $('#Operation_description_1672751800658').tooltip({placement:\"right\"});\n    });"},{"name":"operation_data_handling","pseudonim":"What_does_your_operation_do_to_the_data_it_receives_or_sends?","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1674060543748\" style=\"display:none;\"></div>\n<small id=\"\" class=\"form-text text-muted\">\n(operation's data handling)\n</small>\n<div class=\"col-12\">\n<select onchange=\"executeCustomCode('What_does_your_operation_do_to_the_data_it_receives_or_sends?_reserved_code')\" class=\"form-select\" id=\"operation_data_handling_1672751800658\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"right\" title=\"This qualitative property establishes what is done to data after the operation consumes or produces it. This helps us to assess the storage consumption of a software.\n\">\n  <option  value=\"keep\">It stores the data after using it</option>\n  <option value=\"destroy\">It destroys data after using it</option>\n  <option value=\"broadcast\">Store and broadcast</option>\n</select>\n</div>\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1674060543748');\n\nlet select_value = document.getElementById(\"operation_data_handling_1672751800658\").value;\n\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,'', select_value);","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#operation_data_handling_1672751800658').then((elm) => {\n//type your code here\ndocument.getElementById(\"operation_data_handling_1672751800658\").value = property_value;\nconsole.log(\"set the value to \"+document.getElementById(\"operation_data_handling_1672751800658\").value);\n$('#operation_data_handling_1672751800658').tooltip({placement:\"right\"});\n});"},{"name":"operation_task_distribution","pseudonim":"Where_will_the_operation_run?","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1674063771378\" style=\"display:none;\"></div>\n<small id=\"\" class=\"form-text text-muted\">\n(operation's task distribution)\n</small>\n<div class=\"col-12\">\n<select onchange=\"executeCustomCode('Where_will_the_operation_run?_reserved_code')\" class=\"form-select\" id=\"operation_task_distribution_1672751800658\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This qualitative\nproperty defines if the operation must be always executend in the same entity or it can\nbe distributed among several others. It also helps us to understand where energy is going to be consumed.\">\n  <option  value=\"centralized\">Always in the same device</option>\n\n  <option value=\"decentralized\">It doesn't matter where</option>\n</select>\n</div>","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1674063771378');\n\nlet select_value = document.getElementById(\"operation_task_distribution_1672751800658\").value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name, select_value);","hide_variable":false,"custom_value_load":"//property_value\n//instance_id\n//parent_index\n\n\nwaitForElementToExist('#operation_task_distribution_1672751800658').then((elm) => {\n//type your code here\ndocument.getElementById(\"operation_task_distribution_1672751800658\").value = property_value;\nconsole.log(\"set the value to \"+document.getElementById(\"operation_task_distribution_1672751800658\").value);\n$('#operation_task_distribution_1672751800658').tooltip({placement:\"right\"});\n});"},{"name":"operation_depth","pseudonim":"Depth","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1681120650765\" style=\"display:none;\"></div>\n<small id=\"\" class=\"form-text text-muted\">\n(operation's depth)\n</small>\n<div class=\"col-12\">\n<select onchange=\"executeCustomCode('Depth_reserved_code')\" class=\"form-select\" id=\"Depth_1672751800658\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This qualitative\nproperty defines if the operation must be always executend in the same entity or it can\nbe distributed among several others. It also helps us to understand where energy is going to be consumed.\">\n  <option  value=\"foreground\">The user is aware of this operation (it visibly affects the GUI)</option>\n\n  <option value=\"background\">The user is not aware of this operation</option>\n</select>\n</div>\n\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1681120650765');\n\nlet select_value = document.getElementById(\"Depth_1672751800658\").value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name, select_value);\n","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#Depth_1672751800658').then((elm) => {\n    //type your code here\n    document.getElementById(\"Depth_1672751800658\").value = property_value;\n    $('#Depth_1672751800658').tooltip({placement:\"right\"});\n    });"},{"name":"instructions","pseudonim":"JavaScript_instructions","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1705482934327\" style=\"display:none;\"></div>\n<div id=\"operation_instructions_editor\"></div>\n<div id=\"second_test_html\"></div>","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_id');\n","hide_variable":true,"custom_value_load":"\n\nwaitForElementToExist('#operation_instructions_editor').then((elm) => {\n   let instructions_editor;\n instructions_editor= ace.edit(\"operation_instructions_editor\");\n    ace.require(\"ace/ext/language_tools\");\n    instructions_editor.setOptions({\n\n        highlightActiveLine: true,\n        enableLiveAutocompletion: true,\n        enableBasicAutocompletion: true\n    });\n    instructions_editor.setTheme(\"ace/theme/chrome\");\n    instructions_editor.session.setMode(\"ace/mode/javascript\");\n    document.getElementById('operation_instructions_editor').style.fontSize = '18px';\n    instructions_editor.setValue('');\n    });"},{"name":"CPU_usage","pseudonim":"Processor_usage","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1680545178145\" style=\"display:none;\"></div>\n\n<div class=\"col-md-12\">\n<select onchange=\"executeCustomCode('Processor_usage_reserved_code')\" class=\"form-select\" id=\"Processor_usage_1673438264399\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This property defines how much CPU usage the operation represents.\">\n<option value=\"\">None</option>\n<option value=\"low\">Low</option>\n<option value=\"medium\">Medium</option>\n<option value=\"high\">High</option>\n</select>\n</div>\n\n","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_1680545178145');\nlet custom_value = document.getElementById('Processor_usage_1673438264399').value;\n//to save the value of a custom element, pass to it the value in custom_value\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value)\n","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#Processor_usage_1673438264399').then((elm) => {\n    //type your code here\n    document.getElementById(\"Processor_usage_1673438264399\").value = property_value;\n    $('#Processor_usage_1673438264399').tooltip({placement:\"right\"});\n    });"},{"name":"RAM_usage","pseudonim":"RAM_usage","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1681033725495\" style=\"display:none;\"></div>\n\n<div class=\"col-md-12\">\n<select onchange=\"executeCustomCode('RAM_usage_reserved_code')\" class=\"form-select\" id=\"RAM_usage_1673438264399\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This property defines how much RAM usage the operation represents.\">\n<option value=\"\">None</option>\n<option value=\"low\">Low</option>\n<option value=\"medium\">Medium</option>\n<option value=\"high\">High</option>\n</select>\n</div>","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_1681033725495');\nlet custom_value = document.getElementById('RAM_usage_1673438264399').value;\n//to save the value of a custom element, pass to it the value in custom_value\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value)\n","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#RAM_usage_1673438264399').then((elm) => {\n    //type your code here\n    document.getElementById(\"RAM_usage_1673438264399\").value = property_value;\n    $('#RAM_usage_1673438264399').tooltip({placement:\"right\"});\n    });"},{"name":"storage_usage","pseudonim":"Storage_usage","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1681111109293\" style=\"display:none;\"></div>\n\n<div class=\"col-md-12\">\n<select onchange=\"executeCustomCode('Storage_usage_reserved_code')\" class=\"form-select\" id=\"Storage_usage_1673438264399\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This property defines how much Storage usage the operation represents.\">\n<option value=\"\">None</option>\n<option value=\"low\">Low</option>\n<option value=\"medium\">Medium</option>\n<option value=\"high\">High</option>\n</select>\n</div>\n","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_1681111109293');\nlet custom_value = document.getElementById('Storage_usage_1673438264399').value;\n//to save the value of a custom element, pass to it the value in custom_value\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value)\n","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#Storage_usage_1673438264399').then((elm) => {\n    //type your code here\n    document.getElementById(\"Storage_usage_1673438264399\").value = property_value;\n    $('#Storage_usage_1673438264399').tooltip({placement:\"right\"});\n    });"},{"name":"network_usage","pseudonim":"Network_usage","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1681112205991\" style=\"display:none;\"></div>\n\n<div class=\"col-md-12\">\n<select onchange=\"executeCustomCode('Network_usage_reserved_code')\" class=\"form-select\" id=\"Network_usage_1673438264399\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This property defines how much network usage the operation represents.\">\n<option value=\"\">None</option>\n<option value=\"low\">Low</option>\n<option value=\"medium\">Medium</option>\n<option value=\"high\">High</option>\n</select>\n</div>\n\n","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_1681112205991');\nlet custom_value = document.getElementById('Network_usage_1673438264399').value;\n//to save the value of a custom element, pass to it the value in custom_value\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value)\n","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#Network_usage_1673438264399').then((elm) => {\n    //type your code here\n    document.getElementById(\"Network_usage_1673438264399\").value = property_value;\n    $('#Network_usage_1673438264399').tooltip({placement:\"right\"});\n    });"},{"name":"Camera","pseudonim":"Camera_usage","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1681112558583\" style=\"display:none;\"></div>\n\n<div class=\"col-md-12\">\n<select onchange=\"executeCustomCode('Camera_usage_reserved_code')\" class=\"form-select\" id=\"Camera_usage_1673438264399\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This property defines how the camera is used by the operation.\">\n<option value=\"off\" selected=\"selected\">Off</option>\n<option value=\"cirumstancial\">Circumstancial</option>\n<option value=\"on\">On</option>\n</select>\n</div>\n\n","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_1681112558583');\nlet custom_value = document.getElementById('Camera_usage_1673438264399').value;\n//to save the value of a custom element, pass to it the value in custom_value\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value)\n","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#Camera_usage_1673438264399').then((elm) => {\n    //type your code here\n    document.getElementById(\"Camera_usage_1673438264399\").value = property_value;\n    $('#Camera_usage_1673438264399').tooltip({placement:\"right\"});\n    });"},{"name":"Screen_brightness","pseudonim":"Screen_brightness","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1681113716582\" style=\"display:none;\"></div>\n\n<div class=\"col-md-12\">\n<select onchange=\"executeCustomCode('Screen_brightness_reserved_code')\" class=\"form-select\" id=\"Screen_brightness_1673438264399\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This property defines how the camera is used by the operation.\">\n<option value=\"unused\" selected=\"selected\">Screen not used by this operation</option>\n<option value=\"off\" selected=\"selected\">Off</option>\n<option value=\"low\">Low</option>\n<option value=\"medium\">Medium</option>\n<option value=\"high\">High</option>\n<option value=\"auto\">Auto</option>\n</select>\n</div>","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_1681113716582');\nlet custom_value = document.getElementById('Screen_brightness_1673438264399').value;\n//to save the value of a custom element, pass to it the value in custom_value\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value)\n","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#Screen_brightness_1673438264399').then((elm) => {\n    //type your code here\n    document.getElementById(\"Screen_brightness_1673438264399\").value = property_value;\n    $('#Screen_brightness_1673438264399').tooltip({placement:\"right\"});\n    });"},{"name":"GPS","pseudonim":"GPS_usage","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1681114219737\" style=\"display:none;\"></div>\n\n<div class=\"col-md-12\">\n<select onchange=\"executeCustomCode('GPS_usage_reserved_code')\" class=\"form-select\" id=\"GPS_usage_1673438264399\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This property defines how the camera is used by the operation.\">\n<option value=\"off\" selected=\"selected\">Off</option>\n<option value=\"cirumstancial\">Circumstancial</option>\n<option value=\"on\">On</option>\n</select>\n</div>\n\n","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_1681114219737');\nlet custom_value = document.getElementById('GPS_usage_1673438264399').value;\n//to save the value of a custom element, pass to it the value in custom_value\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value)\n","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#GPS_usage_1673438264399').then((elm) => {\n    //type your code here\n    document.getElementById(\"GPS_usage_1673438264399\").value = property_value;\n    $('#GPS_usage_1673438264399').tooltip({placement:\"right\"});\n    });"},{"name":"Bluetooth","pseudonim":"Bluetooth_usage","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1681114887568\" style=\"display:none;\"></div>\n\n<div class=\"col-md-12\">\n<select onchange=\"executeCustomCode('Bluetooth_usage_reserved_code')\" class=\"form-select\" id=\"Bluetooth_usage_1673438264399\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This property defines how the camera is used by the operation.\">\n<option value=\"off\" selected=\"selected\">Off</option>\n<option value=\"cirumstancial\">Circumstancial</option>\n<option value=\"on\">On</option>\n</select>\n</div>\n\n","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_1681114887568');\nlet custom_value = document.getElementById('Bluetooth_usage_1673438264399').value;\n//to save the value of a custom element, pass to it the value in custom_value\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value)\n","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#Bluetooth_usage_1673438264399').then((elm) => {\n    //type your code here\n    document.getElementById(\"Bluetooth_usage_1673438264399\").value = property_value;\n    $('#Bluetooth_usage_1673438264399').tooltip({placement:\"right\"});\n    });"},{"name":"WIFI_usage","pseudonim":"WIFI_usage","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1681115989226\" style=\"display:none;\"></div>\n\n<div class=\"col-md-12\">\n<select onchange=\"executeCustomCode('WIFI_usage_reserved_code')\" class=\"form-select\" id=\"WIFI_usage_1673438264399\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This property defines how the camera is used by the operation.\">\n<option value=\"off\" selected=\"selected\">Off</option>\n<option value=\"cirumstancial\">Circumstancial</option>\n<option value=\"on\">On</option>\n</select>\n</div>\n\n","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_1681115989226');\nlet custom_value = document.getElementById('WIFI_usage_1673438264399').value;\n//to save the value of a custom element, pass to it the value in custom_value\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value)\n","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#WIFI_usage_1673438264399').then((elm) => {\n    //type your code here\n    document.getElementById(\"WIFI_usage_1673438264399\").value = property_value;\n    $('#WIFI_usage_1673438264399').tooltip({placement:\"right\"});\n    });"},{"name":"source_operation_id","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"target_operation_ID","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"operational_dependency_type","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"operation_id","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"trigger_value","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"trigger_Type","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"source_operation","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"target_operation","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"parameter","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":false,"custom_value_load":""},{"name":"parameter_ID","pseudonim":"","validating_expression_input":"","input_type":"Direct","custom_html":"","custom_code":"","hide_variable":true,"custom_value_load":""},{"name":"parameter_description","pseudonim":"Parameter_description","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1681121800494\" style=\"display:none;\"></div>\n\n<div class=\"col-md-12 rule\">\n<textarea class=\"form-control\" id=\"Parameter_description_1672751800658\" rows=\"4\" width=\"100%\"></textarea>\n<button class=\"generic_button border\" onClick=\"executeCustomCode('Parameter_description_reserved_code')\" width=\"100%\">Save description</button> \n</div>\n\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1681121800494');\nlet select_value = document.getElementById(\"Parameter_description_1672751800658\").value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,'', select_value);\n","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#Parameter_description_1672751800658').then((elm) => {\n    //type your code here\n    document.getElementById(\"Parameter_description_1672751800658\").value = property_value;\n    $('#Parameter_description_1672751800658').tooltip({placement:\"right\"});\n    });"},{"name":"direction","pseudonim":"Parameter_direction","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1681122823127\" style=\"display:none;\"></div>\n\n<div class=\"col-md-12\">\n<select onchange=\"executeCustomCode('Parameter_direction_reserved_code')\" class=\"form-select\" id=\"Parameter_direction_1673438264399\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This property defines if the parameter is used within the profile or out to the network or other profiles.\">\n<option value=\"external\" selected=\"selected\">External (other profiles/network)</option>\n<option value=\"internal\">Internal (only used in this profile)</option>\n</select>\n</div>\n\n","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_1681122823127');\nlet custom_value = document.getElementById('Parameter_direction_1673438264399').value;\n//to save the value of a custom element, pass to it the value in custom_value\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value);\n","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#Parameter_direction_1673438264399').then((elm) => {\n    //type your code here\n    document.getElementById(\"Parameter_direction_1673438264399\").value = property_value;\n    $('#Parameter_direction_1673438264399').tooltip({placement:\"right\"});\n    });"},{"name":"size","pseudonim":"Parameter_size","validating_expression_input":"","input_type":"Direct","custom_html":"<div id=\"metadata_anchor_1681123677855\" style=\"display:none;\"></div>\n\n<div class=\"col-md-12 rule\">\n(In MB)\n<input type=\"number\" class=\"form-control\" id=\"Parameter_size_1681123730920\" aria-describedby=\"\" placeholder=\"Enter the parameter size in MB\">\n<button class=\"generic_button border\"onClick=\"executeCustomCode('Parameter_size_reserved_code')\" >Save</button>\n</div>\n\n\n","custom_code":"//to save the value of a custom element, pass to it the value in custom_value\nlet metadata = getPropertyMetadata('metadata_anchor_1681123677855');\n\nlet custom_value = document.getElementById('Parameter_size_1681123730920').value;\n\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value)","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#Parameter_size_1681123730920').then((elm) => {\n    //type your code here\n    document.getElementById(\"Parameter_size_1681123730920\").value = property_value;\n    $('#Parameter_size_1681123730920').tooltip({placement:\"right\"});\n    });"},{"name":"origin","pseudonim":"Where_is_the_parameter_obtained_from?","validating_expression_input":"","input_type":"Direct","custom_html":"\n<div id=\"metadata_anchor_1681124227816\" style=\"display:none;\"></div>\n\n<div class=\"col-md-12\">\n<select onchange=\"executeCustomCode('Where_is_the_parameter_obtained_from?_reserved_code')\" class=\"form-select\" id=\"o1705484374338\" aria-label=\"\" \"data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"This property defines if the parameter is used within the profile or out to the network or other profiles.\">\n<option value=\"operation\" selected=\"selected\">The parameter comes from an operation</option>\n<option value=\"database\">The parameter comes from a database or another source</option>\n</select>\n</div>\n","custom_code":"let metadata = getPropertyMetadata('metadata_anchor_1681124227816');\nlet custom_value = document.getElementById('o1705484374338').value;\n//to save the value of a custom element, pass to it the value in custom_value\nsaveRawPropertyValue(metadata.parent_index,metadata.input_id,metadata.variable_name,metadata.is_variable_subset,metadata.is_instance,metadata.type,metadata.instance_id,true,metadata.subset_name,custom_value);\n","hide_variable":false,"custom_value_load":"\nwaitForElementToExist('#o1705484374338').then((elm) => {\n    //type your code here\n    document.getElementById(\"o1705484374338\").value = property_value;\n    $('#o1705484374338').tooltip({placement:\"right\"});\n    });"},{"category_name":"Profile_configuration","category_pseudonim":"Model_characteristics","hide_category":false},{"category_name":"Computation_centric","category_pseudonim":"Computational_behavior","hide_category":false},{"category_name":"Data_centric","category_pseudonim":"Relationship_with_data","hide_category":false},{"category_name":"Conduct_centric","category_pseudonim":"General_behavior","hide_category":false},{"category_name":"Usage","category_pseudonim":"","hide_category":true},{"category_name":"Run_constraints","category_pseudonim":"","hide_category":true},{"category_name":"Expectations","category_pseudonim":"","hide_category":true},{"category_name":"Cycles","category_pseudonim":"","hide_category":true},{"category_name":"Timed_expectations","category_pseudonim":"test","hide_category":true},{"category_name":"Elasticity","category_pseudonim":"","hide_category":true},{"category_name":"Events","category_pseudonim":"","hide_category":true},{"category_name":"Operations","category_pseudonim":"Functions_or_Methods","hide_category":false},{"category_name":"resource_usage","category_pseudonim":"Basic_Hardware_Usage","hide_category":false},{"category_name":"sensor_usage","category_pseudonim":"Sensor/Actuator_Usage","hide_category":false},{"category_name":"Operation_run_constraints","category_pseudonim":"","hide_category":true},{"category_name":"Parameters","category_pseudonim":"","hide_category":false},{"category_name":"Dependencies","category_pseudonim":"","hide_category":true},{"category_name":"Operational","category_pseudonim":"","hide_category":true},{"category_name":"Triggers","category_pseudonim":"","hide_category":true},{"category_name":"Results","category_pseudonim":"","hide_category":true}],"level":"1"}]}],"customFunctions":{},"sequence_preview_data":"entity Load_game #red\nnote over Load_game : A user runs a game.\nentity Read_peripheral_input #red\nnote over Read_peripheral_input : The game reads the mouse and keyboard states.\nentity Process_video_frames #red\nnote over Process_video_frames : The game renders the next frames based on the input.\nentity Process_audio #red\nnote over Process_audio : Play the audio for the next frames.\nentity Log_player_action #red\nnote over Log_player_action : Logs the player actions in the server\nentity Show_next_frames #red\nnote over Show_next_frames : The user sees the game change\n\nLoad_game->Load_game:'creates Load_data'\nLoad_game->Read_peripheral_input: 'sends Load_data'\nLoad_game->Load_game:'destroys Load_data'\nRead_peripheral_input->Read_peripheral_input:'receives and destroys Load_data'\nRead_peripheral_input->Read_peripheral_input:'creates Peripheral_data'\nRead_peripheral_input->Process_video_frames: 'sends Peripheral_data'\nRead_peripheral_input->Read_peripheral_input:'destroys Peripheral_data'\nProcess_video_frames->Process_video_frames:'receives and destroys Peripheral_data'\nRead_peripheral_input->Read_peripheral_input:'creates Peripheral_data'\nRead_peripheral_input->Process_audio: 'sends Peripheral_data'\nRead_peripheral_input->Read_peripheral_input:'destroys Peripheral_data'\nProcess_audio->Process_audio:'receives and destroys Peripheral_data'\nRead_peripheral_input->Read_peripheral_input:'creates Player_action'\nRead_peripheral_input->Log_player_action: 'sends Player_action'\nRead_peripheral_input->Read_peripheral_input:'destroys Player_action'\ndatabase Log_player_action_database #f5edab\nbox database_interaction #LightBlue\nparticipant Log_player_action\nparticipant Log_player_action_database\nLog_player_action->Log_player_action_database:'receives and stores Player_action'\nProcess_video_frames->Process_video_frames:'creates Video_Frames'\nProcess_video_frames->Show_next_frames: 'sends Video_Frames'\nProcess_video_frames->Process_video_frames:'destroys Video_Frames'\nShow_next_frames->Show_next_frames:'receives and destroys Video_Frames'\nProcess_audio->Process_audio:'creates Audio'\nProcess_audio->Show_next_frames: 'sends Audio'\nProcess_audio->Process_audio:'destroys Audio'\nShow_next_frames->Show_next_frames:'receives and destroys Audio'","builder_algorithm":"var core_hardware_consumption_matrix = [['CPU_usage', 'CPU'], ['RAM_usage', 'RAM'], ['storage_usage', 'Storage'], ['network_usage', 'Network']];\nvar profile_bcs = {};\nclass Step {\n    constructor() {\n        this.by_state = [];\n        this.by_operations = [];\n        this.by_parameter = [];\n        this.results_generated = [];\n        this.description = '';\n    }\n}\n\nvar report_errors = [];\nvar report_highlights = [];\nvar report = [];\nlet monitoring = true;\nfunction monitor(message) {\n    if (monitoring) {\n        console.log(\"Monitoring: \" + message);\n    }\n\n}\n\nfunction fetchProfileBcs(profile) {\n    console.log(\"test test\");\n    if (profile == null) {\n        profile = this.available_parents;\n    }\n    let computation_centric = Object.entries(profile[1][1]);\n    let data_centric = Object.entries(profile[2][1]);\n    let conduct_centric = Object.entries(profile[3][1]);\n\n    let a = [computation_centric, data_centric, conduct_centric];\n\n    a.forEach(category => {\n\n        category.forEach(element => {\n            profile_bcs[element[0]] = element[1];\n            console.log(\"fetchProfileBcs: \" + element[0] + \" and \" + element[1]);\n        });\n    });\n    // Now that we have all the properties per categorie in a json, we can proceed and generate the highlights based on the users' selection\n   Object.entries(profile_bcs).forEach(property=>{\n    //property[0] is the name of the property, property[1] is the value\n    let highlight = getAdvice(property[0],property[1],report_errors);\n    if(highlight!=null){\n        report_highlights.push(highlight);\n    }\n    \n   });\n\n}\n\nclass HardwareConsumption {\n    constructor() {\n        this.Cc = 0;\n        this.Ca = 0;\n        this.Rc = 0;\n        this.Ra = 0;\n        this.Nc = 0;\n        this.Na = 0;\n        this.Sc = 0;\n        this.Sa = 0;\n        this.Camera = '';\n        this.camera_weight = '';\n        this.Bluetooth = '';\n        this.Bluetooth_weight = '';\n        this.WIFI_usage = '';\n        this.WIFI_usage_weight = '';\n        this.GPS = '';\n        this.GPS_weight = '';\n        this.Screen_brightness = '';\n        this.Screen_brightness_weight = '';\n        this.cpuWeight = 0.3;//this weight is heavier because CPU consumes the battery AND generates residual heat\n        this.ramWeight = 0.1;// this weight does not matter a lot because it is a constant source of consumption (the wattage required to keep ram is constant)\n        this.netWeight = 0.5;// this weight is heavier because network consumes locally and remotely!\n        this.storWeight = 0.1;\n        //we get the qualitative consumption for each element from the profile and the quantitative consumption from the taxonomic guide\n        this.HcS = '';\n        this.SCS = '';\n        this.BCS = '';//NOTE: THE PROPERTIES FOR THE BCS RELATED TO THE OPERATION ARE FETCHED INSIDE OF getRelativeConsumption()\n        this.Ocs = '';\n\n\n    }\n\n    selfRateHcs(self) {\n\n        this.HcS = (this.Cc / this.Ca * this.cpuWeight + this.Rc / this.Ra * this.ramWeight + this.Nc / this.Na * this.netWeight + this.Sc / this.Sa * this.storWeight) * 100;\n        monitor(\"Instance rating: \" + this.HcS);\n    }\n    selfRateScs(self) {\n        //we have to be sure that the sensorial consumption score has all the parameters filled in with a value, otherwise we should not assess it.\n\n        if (this.Bluetooth == '' || this.Camera == '' || this.GPS == '' || this.WIFI_usage == '') {\n            report_errors.push({ type: \"error\", sentimient: \"negative\", message: \"There was an issue while calculating the Sensor Consumption Score: not all the sensors have a value assigned. The final rating is invalid.\", algorithmic_category: \"Scs\", target_operation: self.operation_id, references: \"None\" });\n\n        } else {\n            let value_tabulator = { on: 1, off: 0, cirumstancial: 0.5 };\n            monitor(\"Values: \" + JSON.stringify(this));\n            let screen_brightness_tabulator = { unused: '', off: 0, low: 0.04, medium: 0.06, high: 0.1, auto: 0.05 };\n            this.SCS = (value_tabulator[this.Bluetooth] * this.Bluetooth_weight + value_tabulator[this.GPS] * this.GPS_weight + value_tabulator[this.Camera] * this.camera_weight + screen_brightness_tabulator[this.Screen_brightness]) * 100;\n            monitor(\"SCS score: \" + this.SCS);\n        }\n\n    }\n\n    selfRateBcs(self) {\n\n        let guide = JSON.parse('{\"properties\":[{\"property\":\"task_distribution\",\"possible_values\":[{\"value\":\"centralized\",\"score\":0.5},{\"value\":\"decentralized\",\"score\":1}]},{\"property\":\"computational_criticality\",\"possible_values\":[{\"value\":\"low\",\"score\":0.3},{\"value\":\"medium\",\"score\":0.6},{\"value\":\"high\",\"score\":1}]},{\"property\":\"computation_complexity\",\"possible_values\":[{\"value\":\"low\",\"score\":0.3},{\"value\":\"medium\",\"score\":0.6},{\"value\":\"high\",\"score\":1}]},{\"property\":\"distribution_strategy\",\"possible_values\":[{\"value\":\"yes\",\"score\":0},{\"value\":\"no\",\"score\":1}]},{\"property\":\"consumption_rate\",\"possible_values\":[{\"value\":\"definite\",\"score\":0},{\"value\":\"indefinite\",\"score\":0.1}]},{\"property\":\"data_flow_behavior\",\"possible_values\":[{\"value\":\"regular\",\"score\":0.8},{\"value\":\"irregular\",\"score\":0.4}]},{\"property\":\"data_flow_direction\",\"possible_values\":[{\"value\":\"unidirectional\",\"score\":0.5},{\"value\":\"bidirectional\",\"score\":1}]},{\"property\":\"data_handling\",\"possible_values\":[{\"value\":\"keep\",\"score\":0.5},{\"value\":\"destroy\",\"score\":0},{\"value\":\"store and broadcast\",\"score\":0.5}]},{\"property\":\"access_frequency\",\"possible_values\":[{\"value\":\"regular\",\"score\":0},{\"value\":\"irregular\",\"score\":0.5}]},{\"property\":\"depth\",\"possible_values\":[{\"value\":\"foreground\",\"score\":0.5},{\"value\":\"background\",\"score\":0}]},{\"property\":\"dependence\",\"possible_values\":[{\"value\":\"dependee\",\"score\":0.5},{\"value\":\"dependant\",\"score\":0.5},{\"value\":\"independent\",\"score\":0}]}]}');\n\n        //we have to be really careful here because the values of the operations override the values of the profile.\n        //if a value of operation is empty, we use the profile, otherwise we override it with that of the operation\n        //the easiest way to make this is to override the values from the beginning\n        let profile_bcs_copy = JSON.parse(JSON.stringify(profile_bcs));\n        //console.log(JSON.stringify(profile_bcs_copy));\n        Object.entries(profile_bcs_copy).forEach(element => {\n            //console.log(self);\n            if (self.hasOwnProperty('operation_' + element[0])) {\n                profile_bcs_copy[element[0]] = self['operation_' + element[0]];\n\n            }\n        });\n\n\n        for (let x in guide.properties) {\n            let element = guide.properties[x].property;\n            //console.log(\"Checking the guide score for property: \"+element);\n            if (profile_bcs_copy.hasOwnProperty(guide.properties[x].property)) {\n\n                //console.log(\"Property match\");\n                //we now look for the actual quantitative value\n                for (let y in guide.properties[x].possible_values) {\n                    let guide_value = guide.properties[x].possible_values[y].value;\n                    if (profile_bcs_copy[element] == '') {\n                        //report_highlights.push({ type: \"error\", sentimient: \"negative\", message: \"Property \"+element+\" has no value.\", algorithmic_category: \"\", target_operation: self.operation_id, references: \"None\" });\n                    }\n                    else if (guide_value == profile_bcs_copy[element]) {\n                        profile_bcs_copy[element] = guide.properties[x].possible_values[y].score;\n                        //console.log(\"Score for property: \"+element+\" with original value: \"+guide_value+\" is: \"+guide.properties[x].possible_values[y].score);\n                    }\n                }\n            }\n        }\n\n        //now we sum the score of each property\n        var sum = 0.0;\n        Object.entries(profile_bcs_copy).forEach(element => {\n            console.log(\"BCS sum: \" + Number(sum) + \" \" + typeof sum + \" adding: \" + profile_bcs_copy[element[0]] + \" type: \" + typeof profile_bcs_copy[element[0]]);\n            sum += Number(profile_bcs_copy[element[0]]);\n\n        });\n\n        this.BCS = sum;\n\n    }\n\n    selfOCS() {\n        this.Ocs = this.BCS + this.SCS + this.HcS;\n    }\n}\nvar test_sequence;\nvar timing_diagram = '';\n\nfunction initTimingDiagram(root_profile) {\n\n    let profile;\n    if (root_profile == null || root_profile == '') {\n        profile = this.available_parents;\n    } else {\n        profile = root_profile;\n    }\n\n    //we initialize all the operations as robust\n    let init = '\\n <style>\\n    timingDiagram {\\n      .red {\\n        LineColor red\\n      }\\n      .blue {\\n        LineColor blue\\n        LineThickness 3\\n      }\\n    }\\n</style>\\n scale 1 as 200 pixels';\n    timing_diagram += init;\n    let operations = profile[findPlaceByParentName('Operations', profile)][4];\n\n    for (let x in operations) {\n        timing_diagram += '\\nrobust \"' + operations[x].Name + '\" as ' + operations[x].Name.split(' ').join('') + ' <' + '<' + 'blue' + '>' + '>';\n    }\n\n    timing_diagram += '\\n @0';\n    for (let x in operations) {\n        timing_diagram += '\\n' + operations[x].Name.split(' ').join('') + ' is Off';\n    }\n}\n\n\nfunction getAlgoComponents() {\n\n    //we get the operational pathways of the profile in order to define what operations to rate in each step and how\n    var sequencer = [];\n    //do not use the cache of this.element_to_edit.profile_cache as it will evaluate over the older cache, use this.available_parents instead.\n    getProfileOperationalPathways(this.available_parents, sequencer, 0);\n    //console.log(\"Algo: sequencer: \"+JSON.stringify(sequencer));\n\n\n    // We create a hardware consumption guide with the availability:\n    let hardwareConsumption = new HardwareConsumption();\n\n    //we set the hardware availability to whatever we want\n    hardwareConsumption.Ca = 1.6;\n    hardwareConsumption.Ra = 16;\n    hardwareConsumption.Na = 2400;\n    hardwareConsumption.Sa = 256;\n    //We assign the weights here\n    hardwareConsumption.camera_weight = 0.1;\n    hardwareConsumption.Bluetooth_weight = 0.35;\n    hardwareConsumption.WIFI_usage_weight = 0.35;\n    hardwareConsumption.GPS_weight = 0.2;\n\n\n    var sequencer_consumption = [];\n    for (let x in sequencer) {\n        sequencer_consumption.push(rateStep(sequencer[x], x, hardwareConsumption));\n    }\n\n    //we now calculate the final rating for each step by invoking the rateSelf for each of the hardware consumption instances in the sequencer ratings per step\n    for (let x in sequencer_consumption) {\n        //we enter each step\n        for (let y in sequencer_consumption[x]) {\n            let instance = sequencer_consumption[x][y];\n            monitor(\"Instance: \" + JSON.stringify(instance));\n            monitor(\"Sequencer: \" + JSON.stringify(sequencer));\n\n            instance.selfRateHcs();\n            instance.selfRateScs(instance);//I am passing the instance so that I can access the operation id (it is a hack to make my life easier).\n            instance.selfRateBcs(instance);\n            instance.selfOCS();\n        }\n\n    }\n    console.log(\"ALGO SEQUENCER CONSUMPTION: \" + JSON.stringify(sequencer_consumption));\n\n\n    let step_ratings = [];//the average rating for each step, we take the mean from the instance's HcS\n\n    for (let x in sequencer_consumption) {\n        //we enter each step\n        let avg_rating = 0;\n        let sum = 0;\n        for (let y in sequencer_consumption[x]) {\n            let instance = sequencer_consumption[x][y];\n            sum += instance.Ocs;\n        }\n        avg_rating = sum / sequencer_consumption[x].length;\n        step_ratings.push(avg_rating);\n    }\n\n    console.log(\"Step ratings: \" + JSON.stringify(step_ratings));\n\n    for (let x in sequencer) {//here x is the step\n        timing_diagram += sequencer[x].description;\n    }\n\n    //we add the rating background color to the timing diagram\n    let background_descriptions = '';\n\n    //THE COLORS ARE TAKEN FROM WIKIPEDIA: https://en.wikipedia.org/wiki/European_Union_energy_label (washing machines)\n    timing_diagram += '\\n';\n\n    for (let x in step_ratings) {\n\n        //we set the color selection\n        console.log(\"Labeling score: \" + step_ratings[x]);\n        let label = getCategoryAccordingToTaxonomy(step_ratings[x]);\n        background_descriptions += 'highlight ' + (Number(x) + 1) + ' to ' + (Number(x) + 2) + ' ' + label.color + ' : ' + label.label + '\\n';\n\n    }\n\n    timing_diagram += background_descriptions;\n\n    //we store the highest and the lowest scores in the profie data so that we can use them later\n    let highest = 0;\n    for (let x in sequencer_consumption) {\n\n        for (let y in sequencer_consumption[x]) {\n            let instance = sequencer_consumption[x][y];\n            if (instance.Ocs > highest) {\n                highest = instance.Ocs;\n            }\n        }\n\n    }\n\n    let lowest = 100;\n    for (let x in sequencer_consumption) {\n\n        for (let y in sequencer_consumption[x]) {\n            let instance = sequencer_consumption[x][y];\n            if (instance.Ocs < lowest) {\n                lowest = instance.Ocs;\n            }\n        }\n\n    }\n\n    let db_profile_index = findProfilePlaceInStorage('profile', this.element_to_edit.element_id);\n    if (this.db.profile_Array[db_profile_index].hasOwnProperty(\"lowest_cs\")) {\n        this.db.profile_Array[db_profile_index].lowest_cs = lowest;\n        this.db.profile_Array[db_profile_index].highest_cs = highest;\n    } else {\n        this.db.profile_Array[db_profile_index][\"lowest_cs\"] = lowest;\n        this.db.profile_Array[db_profile_index][\"highest_cs\"] = highest;\n    }\n}\n\n/*\n\nfunction getTaxonomicRating() {\n   \n    var sequencer = [];\n\n    getProfileOperationalPathways(JSON.parse(this.element_to_edit.profile_cache), sequencer, 0);//we get all the operational pathways that generate a consumption in a specific sequence\n    //console.log(\"Generating steps ratings\");\n    var sequencer_consumption = [];\n    for (let x in sequencer) {\n        sequencer_consumption.push(rateStep(sequencer[x], x, GeforceNow));\n    }\n\n    console.log(\"Sequencer results: \"+JSON.stringify(sequencer));\n    //we now calculate the final rating for each step by invoking the rateSelf for each of the hardware consumption instances in the sequencer ratings per step\n    for (let x in sequencer_consumption) {\n        //we enter each step\n        for (let y in sequencer_consumption[x]) {\n            let instance = sequencer_consumption[x][y];\n            instance.selfRateHcs();\n        }\n\n    }\n\n    console.log(\"Rated consumption instances: \" + JSON.stringify(sequencer_consumption));\n\n    let step_ratings = [];//the average rating for each step, we take the mean from the instance's HcS\n\n    for (let x in sequencer_consumption) {\n        //we enter each step\n        let avg_rating = 0;\n        let sum = 0;\n        for (let y in sequencer_consumption[x]) {\n            let instance = sequencer_consumption[x][y];\n            sum += instance.HcS;\n        }\n        avg_rating = sum / sequencer_consumption[x].length;\n        step_ratings.push(avg_rating);\n    }\n\n    console.log(\"Step ratings: \" + JSON.stringify(step_ratings));\n\n    for (let x in sequencer) {//here x is the step\n        timing_diagram += sequencer[x].description;\n    }\n\n    //we add the rating background color to the timing diagram\n    let background_descriptions = '';\n\n    //THE COLORS ARE TAKEN FROM WIKIPEDIA: https://en.wikipedia.org/wiki/European_Union_energy_label (washing machines)\n    timing_diagram += '\\n';\n\n    for (let x in step_ratings) {\n\n        //we set the color selection\n        console.log(\"Labeling score: \" + step_ratings[x]);\n        let label = getCategoryAccordingToTaxonomy(step_ratings[x]);\n        background_descriptions += 'highlight ' + (Number(x) + 1) + ' to ' + (Number(x) + 2) + ' ' + label.color + ' : ' + label.label + '\\n';\n\n    }\n\n    timing_diagram += background_descriptions;\n}\n\n*/\n\n\n\nfunction rateStep(step, step_index, hardwareGuideline) {\n\n    console.log(\"%c rateStep: rating step: \" + step_index, 'background-color: white;color:blue');\n    let newConsumption;\n\n    let step_consumption = [];\n    //------------by state operations---------\n    for (let x in step.by_state) {\n        if (step.by_state[x] != null) {\n            newConsumption = new HardwareConsumption();\n            Object.assign(newConsumption, hardwareGuideline);\n\n            let consumption = getRelativeConsumption(step.by_state[x], newConsumption);\n\n            //we assign to the operation its consumption value..\n            findInstanceInStorage(findPlaceByParentName('Operations', this.available_parents), step.by_state[x])['last_HCS'] = consumption;\n\n            step_consumption.push(consumption);\n        }\n    }\n    //------------by parameter operations-----\n\n    for (let x in step.by_parameter) {\n        if (step.by_parameter[x] != null) {\n            newConsumption = new HardwareConsumption();\n            Object.assign(newConsumption, hardwareGuideline);\n            let consumption = getRelativeConsumption(step.by_parameter[x], newConsumption);\n            //we assign to the operation its consumption value..\n            findInstanceInStorage(findPlaceByParentName('Operations', this.available_parents), step.by_parameter[x])['last_HCS'] = consumption;\n\n            step_consumption.push(consumption);\n        }\n    }\n    //------------by operation----------------\n\n    for (let x in step.by_operations) {\n        if (step.by_operations[x] != null) {\n            newConsumption = new HardwareConsumption();\n            Object.assign(newConsumption, hardwareGuideline);\n            let consumption = getRelativeConsumption(step.by_operations[x], newConsumption);\n            //we assign to the operation its consumption value..\n            findInstanceInStorage(findPlaceByParentName('Operations', this.available_parents), step.by_operations[x])['last_HCS'] = consumption;\n\n            step_consumption.push(consumption);\n        }\n    }\n\n    console.log(\"Step \" + x + \" consumption data: \" + JSON.stringify(step_consumption));\n\n    return step_consumption;\n\n\n    function getRelativeConsumption(operation_id, newConsumption) {\n\n        console.log(\"%cgetRelativeConsumption: fetching the relative consumption for: \" + operation_id, 'background-color:white;color:red');\n        let profile = this.available_parents;\n        let consumption_guide_index = findProfilePlaceInStorage('profile', this.element_to_edit.consumption_guide);\n        let consumption_guide_unparsed = db.profile_Array[consumption_guide_index];\n        let consumption_guide_parsed = JSON.parse(db.profile_Array[consumption_guide_index].profile_cache);\n        let software_category = profile[0][1].software_category;\n        let software_type = profile[0][1].software_type;\n        let hardware_platform = profile[0][1].hardware_platform;\n        let operation_instance = findInstanceInStorage(findPlaceByParentName('Operations', profile), operation_id);\n        let sensor_usage_instance = findInstanceInStorage(findPlaceByParentName('Operations', profile), operation_id)\n        let proportion = 3;\n        //-----------CPU RELATIVE CONSUMPTION-------------\n        //1 is the index of the resource usage\n\n        let qualitative_value = operation_instance.inner_variables[1].variables.CPU_usage;\n        let quantitative_value;\n\n        newConsumption.Cc = getValueByConsumptionGuide(operation_id, software_category, software_type, hardware_platform, qualitative_value, 'CPU_usage');\n        if (qualitative_value == 'low') {\n            newConsumption.Cc = newConsumption.Cc / proportion;\n        } else if (qualitative_value == 'medium') {\n            newConsumption.Cc = (newConsumption.Cc / proportion) * 2;\n        }\n\n        //-------------RAM RELATIVE CONSUMPTION-----------\n\n        qualitative_value = operation_instance.inner_variables[1].variables.RAM_usage;\n        quantitative_value = '';\n\n        newConsumption.Rc = getValueByConsumptionGuide(operation_id, software_category, software_type, hardware_platform, qualitative_value, 'RAM_usage');\n        if (qualitative_value == 'low') {\n            newConsumption.Rc = newConsumption.Rc / proportion;\n        } else if (qualitative_value == 'medium') {\n            newConsumption.Rc = (newConsumption.Rc / proportion) * 2;\n        }\n\n        //---------------Storage Relative consumption------------ \n\n        qualitative_value = operation_instance.inner_variables[1].variables.storage_usage;\n        quantitative_value = '';\n\n\n        newConsumption.Sc = getValueByConsumptionGuide(operation_id, software_category, software_type, hardware_platform, qualitative_value, 'storage_usage');\n        if (qualitative_value == 'low') {\n            newConsumption.Sc = newConsumption.Sc / proportion;\n        } else if (qualitative_value == 'medium') {\n            newConsumption.Sc = (newConsumption.Sc / proportion) * 2;\n        }\n        //---------------Network Relative consumption------------ \n\n        qualitative_value = operation_instance.inner_variables[1].variables.network_usage;\n        quantitative_value = '';\n\n        relative_consumption = '';\n\n\n        newConsumption.Nc = getValueByConsumptionGuide(operation_id, software_category, software_type, hardware_platform, qualitative_value, 'network_usage');\n        if (qualitative_value == 'low') {\n            newConsumption.Nc = newConsumption.Nc / proportion;\n        } else if (qualitative_value == 'medium') {\n            newConsumption.Nc = (newConsumption.Nc / proportion) * 2;\n        }\n\n        //------We get the rest of the sensors---------\n        newConsumption.GPS = sensor_usage_instance.inner_variables[2].variables.GPS;\n        newConsumption.Bluetooth = sensor_usage_instance.inner_variables[2].variables.Bluetooth;\n        newConsumption.Camera = sensor_usage_instance.inner_variables[2].variables.Camera;\n        newConsumption.Screen_brightness = sensor_usage_instance.inner_variables[2].variables.Screen_brightness;\n        newConsumption.WIFI_usage = sensor_usage_instance.inner_variables[2].variables.WIFI_usage;\n        console.log(\"JSON: \" + JSON.stringify(newConsumption));\n        //------WE GET THE VALUES FOR THE BBCP PROPERTIES OF THE OPERATIONS--------\n        newConsumption.operation_data_handling = operation_instance.inner_variables[0].variables.operation_data_handling;\n        newConsumption.operation_depth = operation_instance.inner_variables[0].variables.operation_depth;\n        newConsumption.operation_task_distribution = operation_instance.inner_variables[0].variables.operation_task_distribution;\n        newConsumption.operation_id = operation_id;\n\n        //we return the object with all the data for the operation\n        return newConsumption;\n\n    }\n\n    function getValueByConsumptionGuide(operation_id, software_category, software_type, hardware_platform, qualitative_value, hardware_component) {\n\n        let consumption_guide_index = findProfilePlaceInStorage('profile', this.element_to_edit.consumption_guide);\n        let consumption_guide_unparsed = db.profile_Array[consumption_guide_index];\n        let consumption_guide_parsed = JSON.parse(db.profile_Array[consumption_guide_index].profile_cache);\n        let quantitative_value;\n        if (qualitative_value == '') {\n            return 0;\n        }\n        if (typeof qualitative_value == \"string\" || typeof qualitative_value == null) {\n            //we get the quantitative value from the consumption guide\n            //console.log(\"getRelativeConsumtion: The stored value is qualitative, converting to quantitative\");\n            //1- get the valid consumption guide according to the software category, the software type and the hardware platform\n            if (software_type == '') {\n                //there is no software type selection, therefore we have to look in the parent category\n                //3 is the 'consumption' parent for the category, 4 is the instances\n                let consumption_guide_instances = consumption_guide_parsed[3][4];\n                let selected_consumption_guide_index;\n                for (let x in consumption_guide_instances) {\n                    if (consumption_guide_instances[x].parent_instance_id == software_category && consumption_guide_instances[x].inner_id == hardware_platform) {\n                        selected_consumption_guide_index = consumption_guide_instances[x];\n                    }\n                }\n\n                //now that we have the index of the consumption, we have to match the operation hardware consumption values to the values of the index\n                let matrix_name = findInCoreHardwareComponentMatrix(hardware_component);\n\n                let inner_variables = selected_consumption_guide_index.inner_variables\n\n                //we fetch the object in the inner variables that matches the matrix_name\n                let inner_variables_index = '';\n                for (let x in inner_variables) {\n                    if (inner_variables[x].name == matrix_name) {\n                        inner_variables_index = x;\n                        break;\n                    }\n\n                }\n\n                return inner_variables[inner_variables_index].variables[qualitative_value];\n\n            } else {\n                //there is a selection of a software type, therefore the consumption comes from that sub-category\n                //there is no software type selection, therefore we have to look in the parent category\n                //9 is the 'consumption' parent for the software type, 4 is the instances\n                let consumption_guide_instances = consumption_guide_parsed[9][4];\n                let selected_consumption_guide_index;\n                for (let x in consumption_guide_instances) {\n                    if (consumption_guide_instances[x].parent_instance_id == software_type && consumption_guide_instances[x].inner_id == hardware_platform) {\n                        selected_consumption_guide_index = consumption_guide_instances[x];\n                    }\n                }\n\n                //now that we have the index of the consumption, we have to match the operation hardware consumption values to the values of the index\n                let matrix_name = findInCoreHardwareComponentMatrix(hardware_component);\n\n                let inner_variables = selected_consumption_guide_index.inner_variables\n\n                //we fetch the object in the inner variables that matches the matrix_name\n                let inner_variables_index = '';\n                for (let x in inner_variables) {\n                    if (inner_variables[x].name == matrix_name) {\n                        inner_variables_index = x;\n                        break;\n                    }\n\n                }\n\n                return inner_variables[inner_variables_index].variables[qualitative_value];\n\n\n\n            }\n\n\n        } else {\n            //the value is not a string, it is set to a number, probably by an advanced user\n            console.log(\"%cgetRelativeConsumption: The stored value is already quantiative\", 'color:red;');\n            quantitative_value = qualitative_value;\n            return quantitative_value;\n        }\n    }\n\n    function findInCoreHardwareComponentMatrix(profile_component_name) {\n\n        for (let x in core_hardware_consumption_matrix) {\n            //console.log(\"checking \"+profile_component_name+' against '+core_hardware_consumption_matrix[x][0]);\n            if (core_hardware_consumption_matrix[x][0] == profile_component_name) {\n                let matrix_equivalence_name = core_hardware_consumption_matrix[x][1];\n                //console.log(\"Returning name equivalence: \"+matrix_equivalence);\n                //we now have to get the correct object within inner_variables\n                return matrix_equivalence_name;\n            }\n        }\n\n        return profile_component_name;\n\n\n    }\n\n}\n\n\nfunction getProfileOperationalPathways(profile, sequencer, step) {\n\n    //console.log(\"%cgetOperationalPathways: PROFILE \" + JSON.stringify(profile), \"background-color: white;color:red;\");\n    console.log(\"%cgetOperationalPathways: step \" + step, \"background-color: white;color:red;\");\n    //We have to get the consumption from the operations.\n    //I have to create a new attribute for the operatins called \"weight\". Weight will determine\n    //how much actual consumption each one of the operations represents. Right now, I will not add\n    //this property, instead I will assign consupmtion the following way: Low: 1/3 of the consumption, Medium: 2/3 high 3/3\n    //there is still an issue as not all operations are used at the same time. Therefore, I need to find\n    //the available operational sequences using triggers, results, operations and profile states\n\n    //Priority: 1- profile state, 2- operations and results, Operations\n    //I will handle all of this by using steps.\n\n    //1- we get the operations that get triggered by the profile state\n    if (step == 0) {\n        let new_step = new Step();\n        let triggers_index = findPlaceByParentName('Triggers', profile);\n        //alert(\"Available triggers: \"+JSON.stringify(profile[triggers_index][4]));\n        //------TRIGGERED BY STATE------\n        for (let x in profile[triggers_index][4]) {\n            if (profile[triggers_index][4][x].inner_variables[0].variables.trigger_Type == \"state\" && profile[triggers_index][4][x].inner_variables[0].variables.trigger_value == \"run\") {\n                //alert(\"Operation \"+profile[triggers_index][4][x].inner_variables[0].variables.operation_id+\" triggered by state\");\n                //console.log(\"%cOperation triggered by run: \"+profile[triggers_index][4][x].inner_variables[0].variables.operation_id,'background-color:white;color:blue;');\n                new_step.description += '\\n@' + (step + 1) + '\\n' + findInstanceInStorage(findPlaceByParentName('Operations', this.available_parents), profile[triggers_index][4][x].inner_variables[0].variables.operation_id).Name.split(' ').join('') + ' is On';\n                new_step.by_state.push(profile[triggers_index][4][x].inner_variables[0].variables.operation_id);\n                new_step.description += '\\n@' + (step + 2) + '\\n' + findInstanceInStorage(findPlaceByParentName('Operations', this.available_parents), profile[triggers_index][4][x].inner_variables[0].variables.operation_id).Name.split(' ').join('') + ' is Off';\n\n            }\n        }\n\n\n\n        //operations triggered by an operation get triggered instantly by it in the same step\n        //operations triggered by a parameter get triggered in the next step to the one where the parameter is generated\n\n        //find the operations triggered by any operation up until now\n        //----------TRIGGERED BY OPERATIONS-------\n        /*  for(let x in new_step.by_state){\n             //we match the operations that get triggered by the operation in x, using triggers of course\n             let triggers = profile[findPlaceByParentName('Triggers',profile)][4];\n             for(let y in triggers){\n                 let operation_id = triggers[y].inner_variables[0].variables.operation_id;\n                 let target_operation = triggers[y].inner_variables[0].variables.trigger_value;\n                 let trigger_type = triggers[y].inner_variables[0].variables.trigger_Type;\n     \n                 //console.log(\"Operation by_state: \"+step.by_state[x]+\" Operation id:\"+operation_id+\" trigger_type: \"+trigger_type+\" target_operation: \"+target_operation );\n     \n                 if(operation_id == new_step.by_state[x] && trigger_type == 'operation'){\n                     console.log(\"%cOperation triggered by other operation(s): \"+target_operation,'background-color:white;color:blue;' );\n                     new_step.by_operations.push(target_operation);\n                 }\n             }\n         }\n      */\n        console.log(\"PRE operations cascade: \" + JSON.stringify(new_step));\n        getOperationsCascade(new_step.by_state, profile, new_step.by_operations);\n        console.log(\"POST operations cascade: \" + JSON.stringify(new_step));\n        //we get the by_operations timing\n        for (let x in new_step.by_operations) {\n            console.log(\"Adding Operation: \" + new_step.by_operations[x] + \" to ON at \" + (step + 1));\n            let operation_id = new_step.by_operations[x];\n            let operation_name = findInstanceInStorage(findPlaceByParentName('Operations', profile), operation_id).Name;\n            let operation_pseudonim = operation_name.split(' ').join('');\n            new_step.description += '\\n' + '@' + (step + 1) + '\\n' + operation_pseudonim + ' is On';\n            new_step.description += '\\n' + '@' + (step + 2) + '\\n' + operation_pseudonim + ' is Off';\n        }\n        console.log(\"New step descriptions: \" + JSON.stringify(new_step.description));\n        //now that we have the operations triggered by the state and by other operations, we need to get the results they generate\n        //--------------RESULTS---------------\n        let results_index = findPlaceByParentName('Results', profile);\n        for (let x in new_step.by_state) {\n            for (let y in profile[results_index][4]) {\n                let parameter_instance = profile[results_index][4][y].inner_variables[0].variables.parameter;\n                let parameter_name = findInstanceInStorage(findPlaceByParentName('Parameters', this.available_parents), parameter_instance);\n                if (profile[results_index][4][y].inner_variables[0].variables.source_operation == new_step.by_state[x]) {\n                    //console.log(\"%cResult: \"+parameter_instance+\" created by: \"+new_step.by_state[x],\"background-color:white;color:blue;\");\n                    new_step.results_generated.push(profile[results_index][4][y].inner_variables[0].variables.parameter);\n\n                }\n            }\n        }\n        for (let x in new_step.by_operations) {\n            for (let y in profile[results_index][4]) {\n\n                if (profile[results_index][4][y].inner_variables[0].variables.source_operation == new_step.by_operations[x]) {\n                    //console.log(\"%cResult: \"+profile[results_index][4][y].inner_variables[0].variables.parameter+\" created by: \"+new_step.by_operations[x],\"background-color:white;color:blue;\");\n                    new_step.results_generated.push(profile[results_index][4][y].inner_variables[0].variables.parameter);\n                }\n            }\n        }\n\n        sequencer[step] = new_step;\n        step += 1;\n        getProfileOperationalPathways(profile, sequencer, step);\n\n    } else {\n        //****************** STEP>0 ****************\n\n        //we are not in step 0, we gotta set our references to step-1 in order to retrieve previous results\n        let new_step = new Step();\n\n        let previous_step = sequencer[(step - 1)];\n        let triggers_index = findPlaceByParentName('Triggers', profile);\n        //we first get the operations triggered by previous results\n\n        //------------TRIGGERED BY RESULTS----------\n\n        for (let x in previous_step.results_generated) {\n            //we match the operations that get triggered by the operation in x, using triggers of course\n            let triggers = profile[findPlaceByParentName('Triggers', profile)][4];\n            for (let y in triggers) {\n                let operation_to_trigger = triggers[y].inner_variables[0].variables.operation_id;\n                let parameter = triggers[y].inner_variables[0].variables.trigger_value;\n                let trigger_type = triggers[y].inner_variables[0].variables.trigger_Type;\n\n                //console.log(\"Operation by_state: \"+step.by_state[x]+\" Operation id:\"+operation_id+\" trigger_type: \"+trigger_type+\" target_operation: \"+target_operation );\n\n                if (parameter == previous_step.results_generated[x] && trigger_type == 'parameter') {\n                    //console.log(\"%cOperation triggered by previous parameters: \"+operation_to_trigger,'background-color:white;color:blue;' );\n                    new_step.by_parameter.push(operation_to_trigger);\n                    let operation_name = findInstanceInStorage(findPlaceByParentName('Operations', profile), operation_to_trigger).Name;\n                    let operation_pseudonim = operation_name.split(' ').join('');\n\n                    new_step.description += '\\n@' + (step + 1);\n                    new_step.description += '\\n' + operation_pseudonim + ' is On';\n                    new_step.description += '\\n@' + (step + 2);\n                    new_step.description += '\\n' + operation_pseudonim + ' is Off';\n                }\n            }\n\n        }\n\n        //--------TRIGGERED BY OPERATIONS--------\n        getOperationsCascade(new_step.by_parameter, profile, new_step.by_operations);\n        console.log(\"POST operations cascade in step >0: \" + JSON.stringify(new_step));\n        for (let x in new_step.by_operations) {\n            let operation_name = findInstanceInStorage(findPlaceByParentName('Operations', profile), new_step.by_operations[x]).Name;\n            let operation_pseudonim = operation_name.split(' ').join('');\n            new_step.description += '\\n@' + (step + 1);\n            new_step.description += '\\n' + operation_pseudonim + ' is On';\n            new_step.description += '\\n@' + (step + 2);\n            new_step.description += '\\n' + operation_pseudonim + ' is Off';\n        }\n        //---------RESULTS---------\n        let results_index = findPlaceByParentName('Results', profile);\n        for (let x in new_step.by_parameter) {\n            for (let y in profile[results_index][4]) {\n\n                if (profile[results_index][4][y].inner_variables[0].variables.source_operation == new_step.by_parameter[x]) {\n                    //console.log(\"%cResult: \"+profile[results_index][4][y].inner_variables[0].variables.parameter+\" created by: \"+new_step.by_parameter[x],\"background-color:white;color:blue;\");\n                    new_step.results_generated.push(profile[results_index][4][y].inner_variables[0].variables.parameter);\n                }\n            }\n        }\n        for (let x in new_step.by_operations) {\n            for (let y in profile[results_index][4]) {\n\n                if (profile[results_index][4][y].inner_variables[0].variables.source_operation == new_step.by_operations[x]) {\n                    console.log(\"%cResult: \" + profile[results_index][4][y].inner_variables[0].variables.parameter + \" created by: \" + new_step.by_operations[x], \"background-color:white;color:blue;\");\n                    new_step.results_generated.push(profile[results_index][4][y].inner_variables[0].variables.parameter);\n                }\n            }\n        }\n\n        if (new_step.by_operations == '' && new_step.by_parameter == '') {\n            return;\n        } else {\n            sequencer[step] = new_step;\n            step += 1;\n            getProfileOperationalPathways(profile, sequencer, step);\n        }\n\n\n    }\n}\n\nfunction getOperationsCascade(startOperations, profile, rootCascade) {\n\n    let cascade = [];\n    let triggers_index = profile[findPlaceByParentName('Triggers', profile)][4];\n    console.log(\"Operations cascade using the following triggers:\\n \" + JSON.stringify(triggers_index));\n    //we gotta check the operations triggered by the start operations and the subsequent operations\n    console.log(\"START OPERATIONS: \" + startOperations);\n    for (let x in startOperations) {\n        for (let y in triggers_index) {\n            let trigger_data = triggers_index[y].inner_variables[0].variables;\n            let trigger_origin = trigger_data.operation_id;\n            let trigger_target = trigger_data.trigger_value;\n            let trigger_Type = trigger_data.trigger_Type;\n            console.log(\"Current operation \" + startOperations[x] + \" trigger: \\nType: \" + trigger_Type + \"\\nOrigin: \" + trigger_origin + \"\\nTarget: \" + trigger_target);\n            if (startOperations[x] == trigger_target && trigger_Type == 'operation') {\n                console.log(\"%cgetOperationsCascade: does operation \" + startOperations[x] + \" trigger \" + trigger_target + \"? \", 'background-color:white;color:red;');\n                console.log(\"%cYES\", 'color:green');\n                rootCascade.push(trigger_origin);\n                cascade.push(trigger_origin);\n            } else {\n                console.log(\"%cNO\", 'color:red');\n            }\n\n        }\n    }\n\n    if (cascade.length == 0) {\n        return;\n    } else {\n        //we employ recursion to find out what other operations are triggered down the pipeline\n        console.log(\"getOperaitionsCascade: starting recursion with: \" + JSON.stringify(cascade));\n        getOperationsCascade(cascade, profile, rootCascade);\n    }\n}\n\n\nfunction getCategoryAccordingToTaxonomy(score) {\n\n    let label = '';\n    let color = '';\n    if (score < 20) {\n        label = 'A';\n    } else if (score >= 20 && score < 30) {\n        label = 'B';\n    } else if (score >= 30 && score < 40) {\n        label = 'C';\n    } else if (score >= 40 && score < 50) {\n        label = 'D';\n    } else if (score >= 50 && score < 60) {\n        label = 'E';\n    } else if (score >= 60 && score < 70) {\n        label = 'F';\n    } else if (score >= 70) {\n        label = 'G';\n    }\n\n    if (label == 'A') {\n        color = '#33a357';\n    }\n    if (label == 'B') {\n        color = '#79b752';\n    }\n    if (label == 'C') {\n        color = '#c3d545';\n    }\n    if (label == 'D') {\n        color = '#fff12c';\n    }\n    if (label == 'E') {\n        color = '#edb731';\n    }\n    if (label == 'F') {\n        color = '#d66f2c';\n    }\n    if (label == 'G') {\n        color = '#cc232a';\n    }\n\n    let final_label = new Object();\n    final_label.label = label;\n    final_label.color = color;\n    return final_label;\n}\n\n\n//lets open the general traits..\n\n\nfunction getSubSetVariables(name) {\n    let place = findPlaceByParentName(name, this.available_parents);\n    return this.available_parents[place][1];\n}\n/*\nfunction rateComputationCentric() {\n    console.log('bollocks');\n    //we get the properties for this sub-set of properties\n    let variables = getSubSetVariables('Computation_centric');\n    console.log('available variables: ' + Object.keys(variables));\n    let score = 0;\n    let max_score = Object.keys(variables).length;//this is not true, the maximum score should be relative to the availability of the data as well. some properties could be empty.\n\n    variables.task_distribution == 'centralized' ? (score++, this.report.push({type:\"\",sentimient:\"\",message:\"The <strong>task distribution</strong> of your profile is set to centralized. A centralized architecture can have its own benefits, however, deploying your software in a decentralized architecure can allow you to execute it in the most frugal hardware.\",algorithmic_category:'',target_operation:'',references:''})) : null;\n\n    let current_property = variables.computational_criticality;\n\n    if (current_property == 'low') {\n    } else if (current_property == 'medium') {\n        score += 0.5;\n    } else if (current_property == 'high') {\n        score += 1;\n        this.report.push({type:\"highlight\",sentiment:\"negative\",message:'Your <strong>computational criticality</strong> is set to high, more energy will be expended in order to obtain your results faster.', target_operation:'',references:''});\n    }\n\n    current_property = variables.computation_complexity;\n\n    if (current_property == 'low') {\n    } else if (current_property == 'medium') {\n        score += 0.5;\n    } else if (current_property == 'high') {\n        score += 1;\n        this.report.push('Your <strong>computational complexity</strong> is set to high, more energy will be expended in order to obtain your results.');\n    }\n\n    console.log(this.report);\n    console.log('final computation centric score:' + score + '|' + max_score);\n\n    let final_score = { rating: score, max_score: max_score, report: this.report, parent: 'Computation centric' };\n    return final_score;\n}\n*/\n/*\nfunction rateDataCentric() {\n    console.log('bollocks');\n    //we get the properties for this sub-set of properties\n    let variables = getSubSetVariables('Data_centric');\n    console.log('available variables: ' + Object.keys(variables));\n    let score = 0;\n    let max_score = Object.keys(variables).length;\n\n    let final_score = { rating: score, max_score: max_score, report: this.report, parent: 'Data centric' };\n    return final_score;\n}\n*/\n\n\ninitTimingDiagram();\n//-------Generate the ratings-------------\n//we get the Ocs for each operation in a step: \nfetchProfileBcs(this.available_parents);\ngetAlgoComponents();\n//let taxonomic_label = getCategoryAccordingToTaxonomy(taxonomic_rating);\n\n//-------Generate the timing diagram-------\ntiming_diagram += '';\nconsole.log(\"Timing diagram generated by the algorithm: \" + timing_diagram);\nthis.db.timing_diagram = timing_diagram;\nupdateLocalStorage();\n//the following line updates the memory of the builder to keep it up to date with the data generated by the algorithm\n//this.setBuilderSelection('profile',this.element_to_edit.element_id);\n//the following line updates the diagrams by making a request to plantuml url\nreasonerPlantumlDiagram();\nconsole.log(\"Report highlights: \" + JSON.stringify(report_errors));\nconsole.log(\"Report: \" + report);\n//----- Guide the user to new things in the UI -------\n//the next line is used to highlight elements in the UI by adding a green shadow to them\ndocument.getElementById('_' + findPlaceByParentName('Operations', this.available_parents) + '_parent_header').parentElement.classList.add('attention');\n//the next line refreshes the operations list so that it gets updated with the latest labels.\npopulateChildren(findPlaceByParentName('Operations', this.available_parents), null, null, true, true);\n//window.open('./timing_preview.html');\nshowReport(report_errors,report_highlights);\n\n","timing_diagram":"\n <style>\n    timingDiagram {\n      .red {\n        LineColor red\n      }\n      .blue {\n        LineColor blue\n        LineThickness 3\n      }\n    }\n</style>\n scale 1 as 200 pixels\nrobust \"Load game\" as Loadgame <<blue>>\nrobust \"Read peripheral input\" as Readperipheralinput <<blue>>\nrobust \"Process video frames\" as Processvideoframes <<blue>>\nrobust \"Process audio\" as Processaudio <<blue>>\nrobust \"Log player action\" as Logplayeraction <<blue>>\nrobust \"Show next frames\" as Shownextframes <<blue>>\n @0\nLoadgame is Off\nReadperipheralinput is Off\nProcessvideoframes is Off\nProcessaudio is Off\nLogplayeraction is Off\nShownextframes is Off\n@1\nLoadgame is On\n@2\nLoadgame is Off\n@2\nReadperipheralinput is On\n@3\nReadperipheralinput is Off\n@3\nProcessvideoframes is On\n@4\nProcessvideoframes is Off\n@3\nProcessaudio is On\n@4\nProcessaudio is Off\n@3\nProcessvideoframes is On\n@4\nProcessvideoframes is Off\n@3\nProcessaudio is On\n@4\nProcessaudio is Off\n@3\nLogplayeraction is On\n@4\nLogplayeraction is Off\n@4\nShownextframes is On\n@5\nShownextframes is Off\n@4\nShownextframes is On\n@5\nShownextframes is Off\nhighlight 1 to 2 #79b752 : B\nhighlight 2 to 3 #33a357 : A\nhighlight 3 to 4 #c3d545 : C\nhighlight 4 to 5 #d66f2c : F\n","test_tube":{"collections":[{"root_id":1706092190912,"configuration_id":1162162289429,"content":{"profiles":[],"collections":[]}}],"collections_configurations":[],"collections_mirror":[],"inner_profiles":[]}}